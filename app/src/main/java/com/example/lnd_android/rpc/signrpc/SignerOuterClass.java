// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: signrpc/signer.proto

package signrpc;

public final class SignerOuterClass {
  private SignerOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface KeyLocatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.KeyLocator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The family of key being identified.
     * </pre>
     *
     * <code>int32 key_family = 1;</code>
     * @return The keyFamily.
     */
    int getKeyFamily();

    /**
     * <pre>
     * The precise index of the key being identified.
     * </pre>
     *
     * <code>int32 key_index = 2;</code>
     * @return The keyIndex.
     */
    int getKeyIndex();
  }
  /**
   * Protobuf type {@code signrpc.KeyLocator}
   */
  public static final class KeyLocator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.KeyLocator)
      KeyLocatorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyLocator.newBuilder() to construct.
    private KeyLocator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyLocator() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KeyLocator();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyLocator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              keyFamily_ = input.readInt32();
              break;
            }
            case 16: {

              keyIndex_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_KeyLocator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_KeyLocator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.KeyLocator.class, signrpc.SignerOuterClass.KeyLocator.Builder.class);
    }

    public static final int KEY_FAMILY_FIELD_NUMBER = 1;
    private int keyFamily_;
    /**
     * <pre>
     * The family of key being identified.
     * </pre>
     *
     * <code>int32 key_family = 1;</code>
     * @return The keyFamily.
     */
    @java.lang.Override
    public int getKeyFamily() {
      return keyFamily_;
    }

    public static final int KEY_INDEX_FIELD_NUMBER = 2;
    private int keyIndex_;
    /**
     * <pre>
     * The precise index of the key being identified.
     * </pre>
     *
     * <code>int32 key_index = 2;</code>
     * @return The keyIndex.
     */
    @java.lang.Override
    public int getKeyIndex() {
      return keyIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyFamily_ != 0) {
        output.writeInt32(1, keyFamily_);
      }
      if (keyIndex_ != 0) {
        output.writeInt32(2, keyIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyFamily_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyFamily_);
      }
      if (keyIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, keyIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.KeyLocator)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.KeyLocator other = (signrpc.SignerOuterClass.KeyLocator) obj;

      if (getKeyFamily()
          != other.getKeyFamily()) return false;
      if (getKeyIndex()
          != other.getKeyIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FAMILY_FIELD_NUMBER;
      hash = (53 * hash) + getKeyFamily();
      hash = (37 * hash) + KEY_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getKeyIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.KeyLocator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.KeyLocator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.KeyLocator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.KeyLocator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.KeyLocator)
        signrpc.SignerOuterClass.KeyLocatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_KeyLocator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_KeyLocator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.KeyLocator.class, signrpc.SignerOuterClass.KeyLocator.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.KeyLocator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyFamily_ = 0;

        keyIndex_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_KeyLocator_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.KeyLocator getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.KeyLocator.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.KeyLocator build() {
        signrpc.SignerOuterClass.KeyLocator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.KeyLocator buildPartial() {
        signrpc.SignerOuterClass.KeyLocator result = new signrpc.SignerOuterClass.KeyLocator(this);
        result.keyFamily_ = keyFamily_;
        result.keyIndex_ = keyIndex_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.KeyLocator) {
          return mergeFrom((signrpc.SignerOuterClass.KeyLocator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.KeyLocator other) {
        if (other == signrpc.SignerOuterClass.KeyLocator.getDefaultInstance()) return this;
        if (other.getKeyFamily() != 0) {
          setKeyFamily(other.getKeyFamily());
        }
        if (other.getKeyIndex() != 0) {
          setKeyIndex(other.getKeyIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.KeyLocator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.KeyLocator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int keyFamily_ ;
      /**
       * <pre>
       * The family of key being identified.
       * </pre>
       *
       * <code>int32 key_family = 1;</code>
       * @return The keyFamily.
       */
      @java.lang.Override
      public int getKeyFamily() {
        return keyFamily_;
      }
      /**
       * <pre>
       * The family of key being identified.
       * </pre>
       *
       * <code>int32 key_family = 1;</code>
       * @param value The keyFamily to set.
       * @return This builder for chaining.
       */
      public Builder setKeyFamily(int value) {
        
        keyFamily_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The family of key being identified.
       * </pre>
       *
       * <code>int32 key_family = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyFamily() {
        
        keyFamily_ = 0;
        onChanged();
        return this;
      }

      private int keyIndex_ ;
      /**
       * <pre>
       * The precise index of the key being identified.
       * </pre>
       *
       * <code>int32 key_index = 2;</code>
       * @return The keyIndex.
       */
      @java.lang.Override
      public int getKeyIndex() {
        return keyIndex_;
      }
      /**
       * <pre>
       * The precise index of the key being identified.
       * </pre>
       *
       * <code>int32 key_index = 2;</code>
       * @param value The keyIndex to set.
       * @return This builder for chaining.
       */
      public Builder setKeyIndex(int value) {
        
        keyIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The precise index of the key being identified.
       * </pre>
       *
       * <code>int32 key_index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyIndex() {
        
        keyIndex_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.KeyLocator)
    }

    // @@protoc_insertion_point(class_scope:signrpc.KeyLocator)
    private static final signrpc.SignerOuterClass.KeyLocator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.KeyLocator();
    }

    public static signrpc.SignerOuterClass.KeyLocator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyLocator>
        PARSER = new com.google.protobuf.AbstractParser<KeyLocator>() {
      @java.lang.Override
      public KeyLocator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyLocator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyLocator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyLocator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.KeyLocator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.KeyDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *The raw bytes of the key being identified. Either this or the KeyLocator
     *must be specified.
     * </pre>
     *
     * <code>bytes raw_key_bytes = 1;</code>
     * @return The rawKeyBytes.
     */
    com.google.protobuf.ByteString getRawKeyBytes();

    /**
     * <pre>
     *The key locator that identifies which key to use for signing. Either this
     *or the raw bytes of the target key must be specified.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return Whether the keyLoc field is set.
     */
    boolean hasKeyLoc();
    /**
     * <pre>
     *The key locator that identifies which key to use for signing. Either this
     *or the raw bytes of the target key must be specified.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return The keyLoc.
     */
    signrpc.SignerOuterClass.KeyLocator getKeyLoc();
    /**
     * <pre>
     *The key locator that identifies which key to use for signing. Either this
     *or the raw bytes of the target key must be specified.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     */
    signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder();
  }
  /**
   * Protobuf type {@code signrpc.KeyDescriptor}
   */
  public static final class KeyDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.KeyDescriptor)
      KeyDescriptorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyDescriptor.newBuilder() to construct.
    private KeyDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyDescriptor() {
      rawKeyBytes_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KeyDescriptor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyDescriptor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              rawKeyBytes_ = input.readBytes();
              break;
            }
            case 18: {
              signrpc.SignerOuterClass.KeyLocator.Builder subBuilder = null;
              if (keyLoc_ != null) {
                subBuilder = keyLoc_.toBuilder();
              }
              keyLoc_ = input.readMessage(signrpc.SignerOuterClass.KeyLocator.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyLoc_);
                keyLoc_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_KeyDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_KeyDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.KeyDescriptor.class, signrpc.SignerOuterClass.KeyDescriptor.Builder.class);
    }

    public static final int RAW_KEY_BYTES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString rawKeyBytes_;
    /**
     * <pre>
     *The raw bytes of the key being identified. Either this or the KeyLocator
     *must be specified.
     * </pre>
     *
     * <code>bytes raw_key_bytes = 1;</code>
     * @return The rawKeyBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRawKeyBytes() {
      return rawKeyBytes_;
    }

    public static final int KEY_LOC_FIELD_NUMBER = 2;
    private signrpc.SignerOuterClass.KeyLocator keyLoc_;
    /**
     * <pre>
     *The key locator that identifies which key to use for signing. Either this
     *or the raw bytes of the target key must be specified.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return Whether the keyLoc field is set.
     */
    @java.lang.Override
    public boolean hasKeyLoc() {
      return keyLoc_ != null;
    }
    /**
     * <pre>
     *The key locator that identifies which key to use for signing. Either this
     *or the raw bytes of the target key must be specified.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return The keyLoc.
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.KeyLocator getKeyLoc() {
      return keyLoc_ == null ? signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
    }
    /**
     * <pre>
     *The key locator that identifies which key to use for signing. Either this
     *or the raw bytes of the target key must be specified.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder() {
      return getKeyLoc();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!rawKeyBytes_.isEmpty()) {
        output.writeBytes(1, rawKeyBytes_);
      }
      if (keyLoc_ != null) {
        output.writeMessage(2, getKeyLoc());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!rawKeyBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, rawKeyBytes_);
      }
      if (keyLoc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getKeyLoc());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.KeyDescriptor)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.KeyDescriptor other = (signrpc.SignerOuterClass.KeyDescriptor) obj;

      if (!getRawKeyBytes()
          .equals(other.getRawKeyBytes())) return false;
      if (hasKeyLoc() != other.hasKeyLoc()) return false;
      if (hasKeyLoc()) {
        if (!getKeyLoc()
            .equals(other.getKeyLoc())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RAW_KEY_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getRawKeyBytes().hashCode();
      if (hasKeyLoc()) {
        hash = (37 * hash) + KEY_LOC_FIELD_NUMBER;
        hash = (53 * hash) + getKeyLoc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.KeyDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.KeyDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.KeyDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.KeyDescriptor)
        signrpc.SignerOuterClass.KeyDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_KeyDescriptor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_KeyDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.KeyDescriptor.class, signrpc.SignerOuterClass.KeyDescriptor.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.KeyDescriptor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        rawKeyBytes_ = com.google.protobuf.ByteString.EMPTY;

        if (keyLocBuilder_ == null) {
          keyLoc_ = null;
        } else {
          keyLoc_ = null;
          keyLocBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_KeyDescriptor_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.KeyDescriptor getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.KeyDescriptor.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.KeyDescriptor build() {
        signrpc.SignerOuterClass.KeyDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.KeyDescriptor buildPartial() {
        signrpc.SignerOuterClass.KeyDescriptor result = new signrpc.SignerOuterClass.KeyDescriptor(this);
        result.rawKeyBytes_ = rawKeyBytes_;
        if (keyLocBuilder_ == null) {
          result.keyLoc_ = keyLoc_;
        } else {
          result.keyLoc_ = keyLocBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.KeyDescriptor) {
          return mergeFrom((signrpc.SignerOuterClass.KeyDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.KeyDescriptor other) {
        if (other == signrpc.SignerOuterClass.KeyDescriptor.getDefaultInstance()) return this;
        if (other.getRawKeyBytes() != com.google.protobuf.ByteString.EMPTY) {
          setRawKeyBytes(other.getRawKeyBytes());
        }
        if (other.hasKeyLoc()) {
          mergeKeyLoc(other.getKeyLoc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.KeyDescriptor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.KeyDescriptor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString rawKeyBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *The raw bytes of the key being identified. Either this or the KeyLocator
       *must be specified.
       * </pre>
       *
       * <code>bytes raw_key_bytes = 1;</code>
       * @return The rawKeyBytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRawKeyBytes() {
        return rawKeyBytes_;
      }
      /**
       * <pre>
       *The raw bytes of the key being identified. Either this or the KeyLocator
       *must be specified.
       * </pre>
       *
       * <code>bytes raw_key_bytes = 1;</code>
       * @param value The rawKeyBytes to set.
       * @return This builder for chaining.
       */
      public Builder setRawKeyBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rawKeyBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The raw bytes of the key being identified. Either this or the KeyLocator
       *must be specified.
       * </pre>
       *
       * <code>bytes raw_key_bytes = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawKeyBytes() {
        
        rawKeyBytes_ = getDefaultInstance().getRawKeyBytes();
        onChanged();
        return this;
      }

      private signrpc.SignerOuterClass.KeyLocator keyLoc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder> keyLocBuilder_;
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       * @return Whether the keyLoc field is set.
       */
      public boolean hasKeyLoc() {
        return keyLocBuilder_ != null || keyLoc_ != null;
      }
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       * @return The keyLoc.
       */
      public signrpc.SignerOuterClass.KeyLocator getKeyLoc() {
        if (keyLocBuilder_ == null) {
          return keyLoc_ == null ? signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
        } else {
          return keyLocBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder setKeyLoc(signrpc.SignerOuterClass.KeyLocator value) {
        if (keyLocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyLoc_ = value;
          onChanged();
        } else {
          keyLocBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder setKeyLoc(
          signrpc.SignerOuterClass.KeyLocator.Builder builderForValue) {
        if (keyLocBuilder_ == null) {
          keyLoc_ = builderForValue.build();
          onChanged();
        } else {
          keyLocBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder mergeKeyLoc(signrpc.SignerOuterClass.KeyLocator value) {
        if (keyLocBuilder_ == null) {
          if (keyLoc_ != null) {
            keyLoc_ =
              signrpc.SignerOuterClass.KeyLocator.newBuilder(keyLoc_).mergeFrom(value).buildPartial();
          } else {
            keyLoc_ = value;
          }
          onChanged();
        } else {
          keyLocBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder clearKeyLoc() {
        if (keyLocBuilder_ == null) {
          keyLoc_ = null;
          onChanged();
        } else {
          keyLoc_ = null;
          keyLocBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public signrpc.SignerOuterClass.KeyLocator.Builder getKeyLocBuilder() {
        
        onChanged();
        return getKeyLocFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder() {
        if (keyLocBuilder_ != null) {
          return keyLocBuilder_.getMessageOrBuilder();
        } else {
          return keyLoc_ == null ?
              signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
        }
      }
      /**
       * <pre>
       *The key locator that identifies which key to use for signing. Either this
       *or the raw bytes of the target key must be specified.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder> 
          getKeyLocFieldBuilder() {
        if (keyLocBuilder_ == null) {
          keyLocBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder>(
                  getKeyLoc(),
                  getParentForChildren(),
                  isClean());
          keyLoc_ = null;
        }
        return keyLocBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.KeyDescriptor)
    }

    // @@protoc_insertion_point(class_scope:signrpc.KeyDescriptor)
    private static final signrpc.SignerOuterClass.KeyDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.KeyDescriptor();
    }

    public static signrpc.SignerOuterClass.KeyDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<KeyDescriptor>() {
      @java.lang.Override
      public KeyDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyDescriptor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyDescriptor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.KeyDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TxOutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.TxOut)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The value of the output being spent.
     * </pre>
     *
     * <code>int64 value = 1;</code>
     * @return The value.
     */
    long getValue();

    /**
     * <pre>
     * The script of the output being spent.
     * </pre>
     *
     * <code>bytes pk_script = 2;</code>
     * @return The pkScript.
     */
    com.google.protobuf.ByteString getPkScript();
  }
  /**
   * Protobuf type {@code signrpc.TxOut}
   */
  public static final class TxOut extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.TxOut)
      TxOutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TxOut.newBuilder() to construct.
    private TxOut(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TxOut() {
      pkScript_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TxOut();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TxOut(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              value_ = input.readInt64();
              break;
            }
            case 18: {

              pkScript_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_TxOut_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_TxOut_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.TxOut.class, signrpc.SignerOuterClass.TxOut.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <pre>
     * The value of the output being spent.
     * </pre>
     *
     * <code>int64 value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public long getValue() {
      return value_;
    }

    public static final int PK_SCRIPT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString pkScript_;
    /**
     * <pre>
     * The script of the output being spent.
     * </pre>
     *
     * <code>bytes pk_script = 2;</code>
     * @return The pkScript.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPkScript() {
      return pkScript_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0L) {
        output.writeInt64(1, value_);
      }
      if (!pkScript_.isEmpty()) {
        output.writeBytes(2, pkScript_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, value_);
      }
      if (!pkScript_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, pkScript_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.TxOut)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.TxOut other = (signrpc.SignerOuterClass.TxOut) obj;

      if (getValue()
          != other.getValue()) return false;
      if (!getPkScript()
          .equals(other.getPkScript())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getValue());
      hash = (37 * hash) + PK_SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getPkScript().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.TxOut parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.TxOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.TxOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.TxOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.TxOut prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.TxOut}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.TxOut)
        signrpc.SignerOuterClass.TxOutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_TxOut_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_TxOut_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.TxOut.class, signrpc.SignerOuterClass.TxOut.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.TxOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        value_ = 0L;

        pkScript_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_TxOut_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.TxOut getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.TxOut.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.TxOut build() {
        signrpc.SignerOuterClass.TxOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.TxOut buildPartial() {
        signrpc.SignerOuterClass.TxOut result = new signrpc.SignerOuterClass.TxOut(this);
        result.value_ = value_;
        result.pkScript_ = pkScript_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.TxOut) {
          return mergeFrom((signrpc.SignerOuterClass.TxOut)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.TxOut other) {
        if (other == signrpc.SignerOuterClass.TxOut.getDefaultInstance()) return this;
        if (other.getValue() != 0L) {
          setValue(other.getValue());
        }
        if (other.getPkScript() != com.google.protobuf.ByteString.EMPTY) {
          setPkScript(other.getPkScript());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.TxOut parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.TxOut) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long value_ ;
      /**
       * <pre>
       * The value of the output being spent.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public long getValue() {
        return value_;
      }
      /**
       * <pre>
       * The value of the output being spent.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(long value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value of the output being spent.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString pkScript_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The script of the output being spent.
       * </pre>
       *
       * <code>bytes pk_script = 2;</code>
       * @return The pkScript.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPkScript() {
        return pkScript_;
      }
      /**
       * <pre>
       * The script of the output being spent.
       * </pre>
       *
       * <code>bytes pk_script = 2;</code>
       * @param value The pkScript to set.
       * @return This builder for chaining.
       */
      public Builder setPkScript(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pkScript_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The script of the output being spent.
       * </pre>
       *
       * <code>bytes pk_script = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPkScript() {
        
        pkScript_ = getDefaultInstance().getPkScript();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.TxOut)
    }

    // @@protoc_insertion_point(class_scope:signrpc.TxOut)
    private static final signrpc.SignerOuterClass.TxOut DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.TxOut();
    }

    public static signrpc.SignerOuterClass.TxOut getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TxOut>
        PARSER = new com.google.protobuf.AbstractParser<TxOut>() {
      @java.lang.Override
      public TxOut parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TxOut(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TxOut> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TxOut> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.TxOut getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.SignDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *A descriptor that precisely describes *which* key to use for signing. This
     *may provide the raw public key directly, or require the Signer to re-derive
     *the key according to the populated derivation path.
     *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
     *then the key locator MUST always be provided, since the derived keys are not
     *persisted unlike with DeriveNextKey.
     * </pre>
     *
     * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
     * @return Whether the keyDesc field is set.
     */
    boolean hasKeyDesc();
    /**
     * <pre>
     *A descriptor that precisely describes *which* key to use for signing. This
     *may provide the raw public key directly, or require the Signer to re-derive
     *the key according to the populated derivation path.
     *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
     *then the key locator MUST always be provided, since the derived keys are not
     *persisted unlike with DeriveNextKey.
     * </pre>
     *
     * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
     * @return The keyDesc.
     */
    signrpc.SignerOuterClass.KeyDescriptor getKeyDesc();
    /**
     * <pre>
     *A descriptor that precisely describes *which* key to use for signing. This
     *may provide the raw public key directly, or require the Signer to re-derive
     *the key according to the populated derivation path.
     *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
     *then the key locator MUST always be provided, since the derived keys are not
     *persisted unlike with DeriveNextKey.
     * </pre>
     *
     * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
     */
    signrpc.SignerOuterClass.KeyDescriptorOrBuilder getKeyDescOrBuilder();

    /**
     * <pre>
     *A scalar value that will be added to the private key corresponding to the
     *above public key to obtain the private key to be used to sign this input.
     *This value is typically derived via the following computation:
     * derivedKey = privkey + sha256(perCommitmentPoint || pubKey) mod N
     * </pre>
     *
     * <code>bytes single_tweak = 2;</code>
     * @return The singleTweak.
     */
    com.google.protobuf.ByteString getSingleTweak();

    /**
     * <pre>
     *A private key that will be used in combination with its corresponding
     *private key to derive the private key that is to be used to sign the target
     *input. Within the Lightning protocol, this value is typically the
     *commitment secret from a previously revoked commitment transaction. This
     *value is in combination with two hash values, and the original private key
     *to derive the private key to be used when signing.
     * k = (privKey*sha256(pubKey || tweakPub) +
     *tweakPriv*sha256(tweakPub || pubKey)) mod N
     * </pre>
     *
     * <code>bytes double_tweak = 3;</code>
     * @return The doubleTweak.
     */
    com.google.protobuf.ByteString getDoubleTweak();

    /**
     * <pre>
     *The full script required to properly redeem the output.  This field will
     *only be populated if a p2wsh or a p2sh output is being signed.
     * </pre>
     *
     * <code>bytes witness_script = 4;</code>
     * @return The witnessScript.
     */
    com.google.protobuf.ByteString getWitnessScript();

    /**
     * <pre>
     *A description of the output being spent. The value and script MUST be
     *provided.
     * </pre>
     *
     * <code>.signrpc.TxOut output = 5;</code>
     * @return Whether the output field is set.
     */
    boolean hasOutput();
    /**
     * <pre>
     *A description of the output being spent. The value and script MUST be
     *provided.
     * </pre>
     *
     * <code>.signrpc.TxOut output = 5;</code>
     * @return The output.
     */
    signrpc.SignerOuterClass.TxOut getOutput();
    /**
     * <pre>
     *A description of the output being spent. The value and script MUST be
     *provided.
     * </pre>
     *
     * <code>.signrpc.TxOut output = 5;</code>
     */
    signrpc.SignerOuterClass.TxOutOrBuilder getOutputOrBuilder();

    /**
     * <pre>
     *The target sighash type that should be used when generating the final
     *sighash, and signature.
     * </pre>
     *
     * <code>uint32 sighash = 7;</code>
     * @return The sighash.
     */
    int getSighash();

    /**
     * <pre>
     *The target input within the transaction that should be signed.
     * </pre>
     *
     * <code>int32 input_index = 8;</code>
     * @return The inputIndex.
     */
    int getInputIndex();
  }
  /**
   * Protobuf type {@code signrpc.SignDescriptor}
   */
  public static final class SignDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.SignDescriptor)
      SignDescriptorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignDescriptor.newBuilder() to construct.
    private SignDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignDescriptor() {
      singleTweak_ = com.google.protobuf.ByteString.EMPTY;
      doubleTweak_ = com.google.protobuf.ByteString.EMPTY;
      witnessScript_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignDescriptor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignDescriptor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              signrpc.SignerOuterClass.KeyDescriptor.Builder subBuilder = null;
              if (keyDesc_ != null) {
                subBuilder = keyDesc_.toBuilder();
              }
              keyDesc_ = input.readMessage(signrpc.SignerOuterClass.KeyDescriptor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyDesc_);
                keyDesc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              singleTweak_ = input.readBytes();
              break;
            }
            case 26: {

              doubleTweak_ = input.readBytes();
              break;
            }
            case 34: {

              witnessScript_ = input.readBytes();
              break;
            }
            case 42: {
              signrpc.SignerOuterClass.TxOut.Builder subBuilder = null;
              if (output_ != null) {
                subBuilder = output_.toBuilder();
              }
              output_ = input.readMessage(signrpc.SignerOuterClass.TxOut.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(output_);
                output_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              sighash_ = input.readUInt32();
              break;
            }
            case 64: {

              inputIndex_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.SignDescriptor.class, signrpc.SignerOuterClass.SignDescriptor.Builder.class);
    }

    public static final int KEY_DESC_FIELD_NUMBER = 1;
    private signrpc.SignerOuterClass.KeyDescriptor keyDesc_;
    /**
     * <pre>
     *A descriptor that precisely describes *which* key to use for signing. This
     *may provide the raw public key directly, or require the Signer to re-derive
     *the key according to the populated derivation path.
     *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
     *then the key locator MUST always be provided, since the derived keys are not
     *persisted unlike with DeriveNextKey.
     * </pre>
     *
     * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
     * @return Whether the keyDesc field is set.
     */
    @java.lang.Override
    public boolean hasKeyDesc() {
      return keyDesc_ != null;
    }
    /**
     * <pre>
     *A descriptor that precisely describes *which* key to use for signing. This
     *may provide the raw public key directly, or require the Signer to re-derive
     *the key according to the populated derivation path.
     *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
     *then the key locator MUST always be provided, since the derived keys are not
     *persisted unlike with DeriveNextKey.
     * </pre>
     *
     * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
     * @return The keyDesc.
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.KeyDescriptor getKeyDesc() {
      return keyDesc_ == null ? signrpc.SignerOuterClass.KeyDescriptor.getDefaultInstance() : keyDesc_;
    }
    /**
     * <pre>
     *A descriptor that precisely describes *which* key to use for signing. This
     *may provide the raw public key directly, or require the Signer to re-derive
     *the key according to the populated derivation path.
     *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
     *then the key locator MUST always be provided, since the derived keys are not
     *persisted unlike with DeriveNextKey.
     * </pre>
     *
     * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.KeyDescriptorOrBuilder getKeyDescOrBuilder() {
      return getKeyDesc();
    }

    public static final int SINGLE_TWEAK_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString singleTweak_;
    /**
     * <pre>
     *A scalar value that will be added to the private key corresponding to the
     *above public key to obtain the private key to be used to sign this input.
     *This value is typically derived via the following computation:
     * derivedKey = privkey + sha256(perCommitmentPoint || pubKey) mod N
     * </pre>
     *
     * <code>bytes single_tweak = 2;</code>
     * @return The singleTweak.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSingleTweak() {
      return singleTweak_;
    }

    public static final int DOUBLE_TWEAK_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString doubleTweak_;
    /**
     * <pre>
     *A private key that will be used in combination with its corresponding
     *private key to derive the private key that is to be used to sign the target
     *input. Within the Lightning protocol, this value is typically the
     *commitment secret from a previously revoked commitment transaction. This
     *value is in combination with two hash values, and the original private key
     *to derive the private key to be used when signing.
     * k = (privKey*sha256(pubKey || tweakPub) +
     *tweakPriv*sha256(tweakPub || pubKey)) mod N
     * </pre>
     *
     * <code>bytes double_tweak = 3;</code>
     * @return The doubleTweak.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDoubleTweak() {
      return doubleTweak_;
    }

    public static final int WITNESS_SCRIPT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString witnessScript_;
    /**
     * <pre>
     *The full script required to properly redeem the output.  This field will
     *only be populated if a p2wsh or a p2sh output is being signed.
     * </pre>
     *
     * <code>bytes witness_script = 4;</code>
     * @return The witnessScript.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getWitnessScript() {
      return witnessScript_;
    }

    public static final int OUTPUT_FIELD_NUMBER = 5;
    private signrpc.SignerOuterClass.TxOut output_;
    /**
     * <pre>
     *A description of the output being spent. The value and script MUST be
     *provided.
     * </pre>
     *
     * <code>.signrpc.TxOut output = 5;</code>
     * @return Whether the output field is set.
     */
    @java.lang.Override
    public boolean hasOutput() {
      return output_ != null;
    }
    /**
     * <pre>
     *A description of the output being spent. The value and script MUST be
     *provided.
     * </pre>
     *
     * <code>.signrpc.TxOut output = 5;</code>
     * @return The output.
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.TxOut getOutput() {
      return output_ == null ? signrpc.SignerOuterClass.TxOut.getDefaultInstance() : output_;
    }
    /**
     * <pre>
     *A description of the output being spent. The value and script MUST be
     *provided.
     * </pre>
     *
     * <code>.signrpc.TxOut output = 5;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.TxOutOrBuilder getOutputOrBuilder() {
      return getOutput();
    }

    public static final int SIGHASH_FIELD_NUMBER = 7;
    private int sighash_;
    /**
     * <pre>
     *The target sighash type that should be used when generating the final
     *sighash, and signature.
     * </pre>
     *
     * <code>uint32 sighash = 7;</code>
     * @return The sighash.
     */
    @java.lang.Override
    public int getSighash() {
      return sighash_;
    }

    public static final int INPUT_INDEX_FIELD_NUMBER = 8;
    private int inputIndex_;
    /**
     * <pre>
     *The target input within the transaction that should be signed.
     * </pre>
     *
     * <code>int32 input_index = 8;</code>
     * @return The inputIndex.
     */
    @java.lang.Override
    public int getInputIndex() {
      return inputIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyDesc_ != null) {
        output.writeMessage(1, getKeyDesc());
      }
      if (!singleTweak_.isEmpty()) {
        output.writeBytes(2, singleTweak_);
      }
      if (!doubleTweak_.isEmpty()) {
        output.writeBytes(3, doubleTweak_);
      }
      if (!witnessScript_.isEmpty()) {
        output.writeBytes(4, witnessScript_);
      }
      if (output_ != null) {
        output.writeMessage(5, getOutput());
      }
      if (sighash_ != 0) {
        output.writeUInt32(7, sighash_);
      }
      if (inputIndex_ != 0) {
        output.writeInt32(8, inputIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyDesc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKeyDesc());
      }
      if (!singleTweak_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, singleTweak_);
      }
      if (!doubleTweak_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, doubleTweak_);
      }
      if (!witnessScript_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, witnessScript_);
      }
      if (output_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getOutput());
      }
      if (sighash_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, sighash_);
      }
      if (inputIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, inputIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.SignDescriptor)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.SignDescriptor other = (signrpc.SignerOuterClass.SignDescriptor) obj;

      if (hasKeyDesc() != other.hasKeyDesc()) return false;
      if (hasKeyDesc()) {
        if (!getKeyDesc()
            .equals(other.getKeyDesc())) return false;
      }
      if (!getSingleTweak()
          .equals(other.getSingleTweak())) return false;
      if (!getDoubleTweak()
          .equals(other.getDoubleTweak())) return false;
      if (!getWitnessScript()
          .equals(other.getWitnessScript())) return false;
      if (hasOutput() != other.hasOutput()) return false;
      if (hasOutput()) {
        if (!getOutput()
            .equals(other.getOutput())) return false;
      }
      if (getSighash()
          != other.getSighash()) return false;
      if (getInputIndex()
          != other.getInputIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyDesc()) {
        hash = (37 * hash) + KEY_DESC_FIELD_NUMBER;
        hash = (53 * hash) + getKeyDesc().hashCode();
      }
      hash = (37 * hash) + SINGLE_TWEAK_FIELD_NUMBER;
      hash = (53 * hash) + getSingleTweak().hashCode();
      hash = (37 * hash) + DOUBLE_TWEAK_FIELD_NUMBER;
      hash = (53 * hash) + getDoubleTweak().hashCode();
      hash = (37 * hash) + WITNESS_SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getWitnessScript().hashCode();
      if (hasOutput()) {
        hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
        hash = (53 * hash) + getOutput().hashCode();
      }
      hash = (37 * hash) + SIGHASH_FIELD_NUMBER;
      hash = (53 * hash) + getSighash();
      hash = (37 * hash) + INPUT_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getInputIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.SignDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.SignDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.SignDescriptor)
        signrpc.SignerOuterClass.SignDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignDescriptor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.SignDescriptor.class, signrpc.SignerOuterClass.SignDescriptor.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.SignDescriptor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (keyDescBuilder_ == null) {
          keyDesc_ = null;
        } else {
          keyDesc_ = null;
          keyDescBuilder_ = null;
        }
        singleTweak_ = com.google.protobuf.ByteString.EMPTY;

        doubleTweak_ = com.google.protobuf.ByteString.EMPTY;

        witnessScript_ = com.google.protobuf.ByteString.EMPTY;

        if (outputBuilder_ == null) {
          output_ = null;
        } else {
          output_ = null;
          outputBuilder_ = null;
        }
        sighash_ = 0;

        inputIndex_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignDescriptor_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignDescriptor getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.SignDescriptor.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignDescriptor build() {
        signrpc.SignerOuterClass.SignDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignDescriptor buildPartial() {
        signrpc.SignerOuterClass.SignDescriptor result = new signrpc.SignerOuterClass.SignDescriptor(this);
        if (keyDescBuilder_ == null) {
          result.keyDesc_ = keyDesc_;
        } else {
          result.keyDesc_ = keyDescBuilder_.build();
        }
        result.singleTweak_ = singleTweak_;
        result.doubleTweak_ = doubleTweak_;
        result.witnessScript_ = witnessScript_;
        if (outputBuilder_ == null) {
          result.output_ = output_;
        } else {
          result.output_ = outputBuilder_.build();
        }
        result.sighash_ = sighash_;
        result.inputIndex_ = inputIndex_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.SignDescriptor) {
          return mergeFrom((signrpc.SignerOuterClass.SignDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.SignDescriptor other) {
        if (other == signrpc.SignerOuterClass.SignDescriptor.getDefaultInstance()) return this;
        if (other.hasKeyDesc()) {
          mergeKeyDesc(other.getKeyDesc());
        }
        if (other.getSingleTweak() != com.google.protobuf.ByteString.EMPTY) {
          setSingleTweak(other.getSingleTweak());
        }
        if (other.getDoubleTweak() != com.google.protobuf.ByteString.EMPTY) {
          setDoubleTweak(other.getDoubleTweak());
        }
        if (other.getWitnessScript() != com.google.protobuf.ByteString.EMPTY) {
          setWitnessScript(other.getWitnessScript());
        }
        if (other.hasOutput()) {
          mergeOutput(other.getOutput());
        }
        if (other.getSighash() != 0) {
          setSighash(other.getSighash());
        }
        if (other.getInputIndex() != 0) {
          setInputIndex(other.getInputIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.SignDescriptor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.SignDescriptor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private signrpc.SignerOuterClass.KeyDescriptor keyDesc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.KeyDescriptor, signrpc.SignerOuterClass.KeyDescriptor.Builder, signrpc.SignerOuterClass.KeyDescriptorOrBuilder> keyDescBuilder_;
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       * @return Whether the keyDesc field is set.
       */
      public boolean hasKeyDesc() {
        return keyDescBuilder_ != null || keyDesc_ != null;
      }
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       * @return The keyDesc.
       */
      public signrpc.SignerOuterClass.KeyDescriptor getKeyDesc() {
        if (keyDescBuilder_ == null) {
          return keyDesc_ == null ? signrpc.SignerOuterClass.KeyDescriptor.getDefaultInstance() : keyDesc_;
        } else {
          return keyDescBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       */
      public Builder setKeyDesc(signrpc.SignerOuterClass.KeyDescriptor value) {
        if (keyDescBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyDesc_ = value;
          onChanged();
        } else {
          keyDescBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       */
      public Builder setKeyDesc(
          signrpc.SignerOuterClass.KeyDescriptor.Builder builderForValue) {
        if (keyDescBuilder_ == null) {
          keyDesc_ = builderForValue.build();
          onChanged();
        } else {
          keyDescBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       */
      public Builder mergeKeyDesc(signrpc.SignerOuterClass.KeyDescriptor value) {
        if (keyDescBuilder_ == null) {
          if (keyDesc_ != null) {
            keyDesc_ =
              signrpc.SignerOuterClass.KeyDescriptor.newBuilder(keyDesc_).mergeFrom(value).buildPartial();
          } else {
            keyDesc_ = value;
          }
          onChanged();
        } else {
          keyDescBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       */
      public Builder clearKeyDesc() {
        if (keyDescBuilder_ == null) {
          keyDesc_ = null;
          onChanged();
        } else {
          keyDesc_ = null;
          keyDescBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       */
      public signrpc.SignerOuterClass.KeyDescriptor.Builder getKeyDescBuilder() {
        
        onChanged();
        return getKeyDescFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       */
      public signrpc.SignerOuterClass.KeyDescriptorOrBuilder getKeyDescOrBuilder() {
        if (keyDescBuilder_ != null) {
          return keyDescBuilder_.getMessageOrBuilder();
        } else {
          return keyDesc_ == null ?
              signrpc.SignerOuterClass.KeyDescriptor.getDefaultInstance() : keyDesc_;
        }
      }
      /**
       * <pre>
       *A descriptor that precisely describes *which* key to use for signing. This
       *may provide the raw public key directly, or require the Signer to re-derive
       *the key according to the populated derivation path.
       *Note that if the key descriptor was obtained through walletrpc.DeriveKey,
       *then the key locator MUST always be provided, since the derived keys are not
       *persisted unlike with DeriveNextKey.
       * </pre>
       *
       * <code>.signrpc.KeyDescriptor key_desc = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.KeyDescriptor, signrpc.SignerOuterClass.KeyDescriptor.Builder, signrpc.SignerOuterClass.KeyDescriptorOrBuilder> 
          getKeyDescFieldBuilder() {
        if (keyDescBuilder_ == null) {
          keyDescBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              signrpc.SignerOuterClass.KeyDescriptor, signrpc.SignerOuterClass.KeyDescriptor.Builder, signrpc.SignerOuterClass.KeyDescriptorOrBuilder>(
                  getKeyDesc(),
                  getParentForChildren(),
                  isClean());
          keyDesc_ = null;
        }
        return keyDescBuilder_;
      }

      private com.google.protobuf.ByteString singleTweak_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *A scalar value that will be added to the private key corresponding to the
       *above public key to obtain the private key to be used to sign this input.
       *This value is typically derived via the following computation:
       * derivedKey = privkey + sha256(perCommitmentPoint || pubKey) mod N
       * </pre>
       *
       * <code>bytes single_tweak = 2;</code>
       * @return The singleTweak.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSingleTweak() {
        return singleTweak_;
      }
      /**
       * <pre>
       *A scalar value that will be added to the private key corresponding to the
       *above public key to obtain the private key to be used to sign this input.
       *This value is typically derived via the following computation:
       * derivedKey = privkey + sha256(perCommitmentPoint || pubKey) mod N
       * </pre>
       *
       * <code>bytes single_tweak = 2;</code>
       * @param value The singleTweak to set.
       * @return This builder for chaining.
       */
      public Builder setSingleTweak(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        singleTweak_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A scalar value that will be added to the private key corresponding to the
       *above public key to obtain the private key to be used to sign this input.
       *This value is typically derived via the following computation:
       * derivedKey = privkey + sha256(perCommitmentPoint || pubKey) mod N
       * </pre>
       *
       * <code>bytes single_tweak = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSingleTweak() {
        
        singleTweak_ = getDefaultInstance().getSingleTweak();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString doubleTweak_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *A private key that will be used in combination with its corresponding
       *private key to derive the private key that is to be used to sign the target
       *input. Within the Lightning protocol, this value is typically the
       *commitment secret from a previously revoked commitment transaction. This
       *value is in combination with two hash values, and the original private key
       *to derive the private key to be used when signing.
       * k = (privKey*sha256(pubKey || tweakPub) +
       *tweakPriv*sha256(tweakPub || pubKey)) mod N
       * </pre>
       *
       * <code>bytes double_tweak = 3;</code>
       * @return The doubleTweak.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDoubleTweak() {
        return doubleTweak_;
      }
      /**
       * <pre>
       *A private key that will be used in combination with its corresponding
       *private key to derive the private key that is to be used to sign the target
       *input. Within the Lightning protocol, this value is typically the
       *commitment secret from a previously revoked commitment transaction. This
       *value is in combination with two hash values, and the original private key
       *to derive the private key to be used when signing.
       * k = (privKey*sha256(pubKey || tweakPub) +
       *tweakPriv*sha256(tweakPub || pubKey)) mod N
       * </pre>
       *
       * <code>bytes double_tweak = 3;</code>
       * @param value The doubleTweak to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleTweak(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        doubleTweak_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A private key that will be used in combination with its corresponding
       *private key to derive the private key that is to be used to sign the target
       *input. Within the Lightning protocol, this value is typically the
       *commitment secret from a previously revoked commitment transaction. This
       *value is in combination with two hash values, and the original private key
       *to derive the private key to be used when signing.
       * k = (privKey*sha256(pubKey || tweakPub) +
       *tweakPriv*sha256(tweakPub || pubKey)) mod N
       * </pre>
       *
       * <code>bytes double_tweak = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleTweak() {
        
        doubleTweak_ = getDefaultInstance().getDoubleTweak();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString witnessScript_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *The full script required to properly redeem the output.  This field will
       *only be populated if a p2wsh or a p2sh output is being signed.
       * </pre>
       *
       * <code>bytes witness_script = 4;</code>
       * @return The witnessScript.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getWitnessScript() {
        return witnessScript_;
      }
      /**
       * <pre>
       *The full script required to properly redeem the output.  This field will
       *only be populated if a p2wsh or a p2sh output is being signed.
       * </pre>
       *
       * <code>bytes witness_script = 4;</code>
       * @param value The witnessScript to set.
       * @return This builder for chaining.
       */
      public Builder setWitnessScript(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        witnessScript_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The full script required to properly redeem the output.  This field will
       *only be populated if a p2wsh or a p2sh output is being signed.
       * </pre>
       *
       * <code>bytes witness_script = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearWitnessScript() {
        
        witnessScript_ = getDefaultInstance().getWitnessScript();
        onChanged();
        return this;
      }

      private signrpc.SignerOuterClass.TxOut output_;
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.TxOut, signrpc.SignerOuterClass.TxOut.Builder, signrpc.SignerOuterClass.TxOutOrBuilder> outputBuilder_;
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       * @return Whether the output field is set.
       */
      public boolean hasOutput() {
        return outputBuilder_ != null || output_ != null;
      }
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       * @return The output.
       */
      public signrpc.SignerOuterClass.TxOut getOutput() {
        if (outputBuilder_ == null) {
          return output_ == null ? signrpc.SignerOuterClass.TxOut.getDefaultInstance() : output_;
        } else {
          return outputBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       */
      public Builder setOutput(signrpc.SignerOuterClass.TxOut value) {
        if (outputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          output_ = value;
          onChanged();
        } else {
          outputBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       */
      public Builder setOutput(
          signrpc.SignerOuterClass.TxOut.Builder builderForValue) {
        if (outputBuilder_ == null) {
          output_ = builderForValue.build();
          onChanged();
        } else {
          outputBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       */
      public Builder mergeOutput(signrpc.SignerOuterClass.TxOut value) {
        if (outputBuilder_ == null) {
          if (output_ != null) {
            output_ =
              signrpc.SignerOuterClass.TxOut.newBuilder(output_).mergeFrom(value).buildPartial();
          } else {
            output_ = value;
          }
          onChanged();
        } else {
          outputBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       */
      public Builder clearOutput() {
        if (outputBuilder_ == null) {
          output_ = null;
          onChanged();
        } else {
          output_ = null;
          outputBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       */
      public signrpc.SignerOuterClass.TxOut.Builder getOutputBuilder() {
        
        onChanged();
        return getOutputFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       */
      public signrpc.SignerOuterClass.TxOutOrBuilder getOutputOrBuilder() {
        if (outputBuilder_ != null) {
          return outputBuilder_.getMessageOrBuilder();
        } else {
          return output_ == null ?
              signrpc.SignerOuterClass.TxOut.getDefaultInstance() : output_;
        }
      }
      /**
       * <pre>
       *A description of the output being spent. The value and script MUST be
       *provided.
       * </pre>
       *
       * <code>.signrpc.TxOut output = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.TxOut, signrpc.SignerOuterClass.TxOut.Builder, signrpc.SignerOuterClass.TxOutOrBuilder> 
          getOutputFieldBuilder() {
        if (outputBuilder_ == null) {
          outputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              signrpc.SignerOuterClass.TxOut, signrpc.SignerOuterClass.TxOut.Builder, signrpc.SignerOuterClass.TxOutOrBuilder>(
                  getOutput(),
                  getParentForChildren(),
                  isClean());
          output_ = null;
        }
        return outputBuilder_;
      }

      private int sighash_ ;
      /**
       * <pre>
       *The target sighash type that should be used when generating the final
       *sighash, and signature.
       * </pre>
       *
       * <code>uint32 sighash = 7;</code>
       * @return The sighash.
       */
      @java.lang.Override
      public int getSighash() {
        return sighash_;
      }
      /**
       * <pre>
       *The target sighash type that should be used when generating the final
       *sighash, and signature.
       * </pre>
       *
       * <code>uint32 sighash = 7;</code>
       * @param value The sighash to set.
       * @return This builder for chaining.
       */
      public Builder setSighash(int value) {
        
        sighash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The target sighash type that should be used when generating the final
       *sighash, and signature.
       * </pre>
       *
       * <code>uint32 sighash = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSighash() {
        
        sighash_ = 0;
        onChanged();
        return this;
      }

      private int inputIndex_ ;
      /**
       * <pre>
       *The target input within the transaction that should be signed.
       * </pre>
       *
       * <code>int32 input_index = 8;</code>
       * @return The inputIndex.
       */
      @java.lang.Override
      public int getInputIndex() {
        return inputIndex_;
      }
      /**
       * <pre>
       *The target input within the transaction that should be signed.
       * </pre>
       *
       * <code>int32 input_index = 8;</code>
       * @param value The inputIndex to set.
       * @return This builder for chaining.
       */
      public Builder setInputIndex(int value) {
        
        inputIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The target input within the transaction that should be signed.
       * </pre>
       *
       * <code>int32 input_index = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputIndex() {
        
        inputIndex_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.SignDescriptor)
    }

    // @@protoc_insertion_point(class_scope:signrpc.SignDescriptor)
    private static final signrpc.SignerOuterClass.SignDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.SignDescriptor();
    }

    public static signrpc.SignerOuterClass.SignDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<SignDescriptor>() {
      @java.lang.Override
      public SignDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignDescriptor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignDescriptor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.SignDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.SignReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The raw bytes of the transaction to be signed.
     * </pre>
     *
     * <code>bytes raw_tx_bytes = 1;</code>
     * @return The rawTxBytes.
     */
    com.google.protobuf.ByteString getRawTxBytes();

    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    java.util.List<signrpc.SignerOuterClass.SignDescriptor> 
        getSignDescsList();
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    signrpc.SignerOuterClass.SignDescriptor getSignDescs(int index);
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    int getSignDescsCount();
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    java.util.List<? extends signrpc.SignerOuterClass.SignDescriptorOrBuilder> 
        getSignDescsOrBuilderList();
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    signrpc.SignerOuterClass.SignDescriptorOrBuilder getSignDescsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code signrpc.SignReq}
   */
  public static final class SignReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.SignReq)
      SignReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignReq.newBuilder() to construct.
    private SignReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignReq() {
      rawTxBytes_ = com.google.protobuf.ByteString.EMPTY;
      signDescs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              rawTxBytes_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                signDescs_ = new java.util.ArrayList<signrpc.SignerOuterClass.SignDescriptor>();
                mutable_bitField0_ |= 0x00000001;
              }
              signDescs_.add(
                  input.readMessage(signrpc.SignerOuterClass.SignDescriptor.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          signDescs_ = java.util.Collections.unmodifiableList(signDescs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.SignReq.class, signrpc.SignerOuterClass.SignReq.Builder.class);
    }

    public static final int RAW_TX_BYTES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString rawTxBytes_;
    /**
     * <pre>
     * The raw bytes of the transaction to be signed.
     * </pre>
     *
     * <code>bytes raw_tx_bytes = 1;</code>
     * @return The rawTxBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRawTxBytes() {
      return rawTxBytes_;
    }

    public static final int SIGN_DESCS_FIELD_NUMBER = 2;
    private java.util.List<signrpc.SignerOuterClass.SignDescriptor> signDescs_;
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<signrpc.SignerOuterClass.SignDescriptor> getSignDescsList() {
      return signDescs_;
    }
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends signrpc.SignerOuterClass.SignDescriptorOrBuilder> 
        getSignDescsOrBuilderList() {
      return signDescs_;
    }
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    @java.lang.Override
    public int getSignDescsCount() {
      return signDescs_.size();
    }
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.SignDescriptor getSignDescs(int index) {
      return signDescs_.get(index);
    }
    /**
     * <pre>
     * A set of sign descriptors, for each input to be signed.
     * </pre>
     *
     * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.SignDescriptorOrBuilder getSignDescsOrBuilder(
        int index) {
      return signDescs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!rawTxBytes_.isEmpty()) {
        output.writeBytes(1, rawTxBytes_);
      }
      for (int i = 0; i < signDescs_.size(); i++) {
        output.writeMessage(2, signDescs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!rawTxBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, rawTxBytes_);
      }
      for (int i = 0; i < signDescs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, signDescs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.SignReq)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.SignReq other = (signrpc.SignerOuterClass.SignReq) obj;

      if (!getRawTxBytes()
          .equals(other.getRawTxBytes())) return false;
      if (!getSignDescsList()
          .equals(other.getSignDescsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RAW_TX_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getRawTxBytes().hashCode();
      if (getSignDescsCount() > 0) {
        hash = (37 * hash) + SIGN_DESCS_FIELD_NUMBER;
        hash = (53 * hash) + getSignDescsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.SignReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.SignReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.SignReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.SignReq)
        signrpc.SignerOuterClass.SignReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.SignReq.class, signrpc.SignerOuterClass.SignReq.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.SignReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignDescsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        rawTxBytes_ = com.google.protobuf.ByteString.EMPTY;

        if (signDescsBuilder_ == null) {
          signDescs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signDescsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignReq_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignReq getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.SignReq.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignReq build() {
        signrpc.SignerOuterClass.SignReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignReq buildPartial() {
        signrpc.SignerOuterClass.SignReq result = new signrpc.SignerOuterClass.SignReq(this);
        int from_bitField0_ = bitField0_;
        result.rawTxBytes_ = rawTxBytes_;
        if (signDescsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            signDescs_ = java.util.Collections.unmodifiableList(signDescs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signDescs_ = signDescs_;
        } else {
          result.signDescs_ = signDescsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.SignReq) {
          return mergeFrom((signrpc.SignerOuterClass.SignReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.SignReq other) {
        if (other == signrpc.SignerOuterClass.SignReq.getDefaultInstance()) return this;
        if (other.getRawTxBytes() != com.google.protobuf.ByteString.EMPTY) {
          setRawTxBytes(other.getRawTxBytes());
        }
        if (signDescsBuilder_ == null) {
          if (!other.signDescs_.isEmpty()) {
            if (signDescs_.isEmpty()) {
              signDescs_ = other.signDescs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignDescsIsMutable();
              signDescs_.addAll(other.signDescs_);
            }
            onChanged();
          }
        } else {
          if (!other.signDescs_.isEmpty()) {
            if (signDescsBuilder_.isEmpty()) {
              signDescsBuilder_.dispose();
              signDescsBuilder_ = null;
              signDescs_ = other.signDescs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signDescsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignDescsFieldBuilder() : null;
            } else {
              signDescsBuilder_.addAllMessages(other.signDescs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.SignReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.SignReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString rawTxBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The raw bytes of the transaction to be signed.
       * </pre>
       *
       * <code>bytes raw_tx_bytes = 1;</code>
       * @return The rawTxBytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRawTxBytes() {
        return rawTxBytes_;
      }
      /**
       * <pre>
       * The raw bytes of the transaction to be signed.
       * </pre>
       *
       * <code>bytes raw_tx_bytes = 1;</code>
       * @param value The rawTxBytes to set.
       * @return This builder for chaining.
       */
      public Builder setRawTxBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rawTxBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The raw bytes of the transaction to be signed.
       * </pre>
       *
       * <code>bytes raw_tx_bytes = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawTxBytes() {
        
        rawTxBytes_ = getDefaultInstance().getRawTxBytes();
        onChanged();
        return this;
      }

      private java.util.List<signrpc.SignerOuterClass.SignDescriptor> signDescs_ =
        java.util.Collections.emptyList();
      private void ensureSignDescsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          signDescs_ = new java.util.ArrayList<signrpc.SignerOuterClass.SignDescriptor>(signDescs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          signrpc.SignerOuterClass.SignDescriptor, signrpc.SignerOuterClass.SignDescriptor.Builder, signrpc.SignerOuterClass.SignDescriptorOrBuilder> signDescsBuilder_;

      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public java.util.List<signrpc.SignerOuterClass.SignDescriptor> getSignDescsList() {
        if (signDescsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signDescs_);
        } else {
          return signDescsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public int getSignDescsCount() {
        if (signDescsBuilder_ == null) {
          return signDescs_.size();
        } else {
          return signDescsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public signrpc.SignerOuterClass.SignDescriptor getSignDescs(int index) {
        if (signDescsBuilder_ == null) {
          return signDescs_.get(index);
        } else {
          return signDescsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder setSignDescs(
          int index, signrpc.SignerOuterClass.SignDescriptor value) {
        if (signDescsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignDescsIsMutable();
          signDescs_.set(index, value);
          onChanged();
        } else {
          signDescsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder setSignDescs(
          int index, signrpc.SignerOuterClass.SignDescriptor.Builder builderForValue) {
        if (signDescsBuilder_ == null) {
          ensureSignDescsIsMutable();
          signDescs_.set(index, builderForValue.build());
          onChanged();
        } else {
          signDescsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder addSignDescs(signrpc.SignerOuterClass.SignDescriptor value) {
        if (signDescsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignDescsIsMutable();
          signDescs_.add(value);
          onChanged();
        } else {
          signDescsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder addSignDescs(
          int index, signrpc.SignerOuterClass.SignDescriptor value) {
        if (signDescsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignDescsIsMutable();
          signDescs_.add(index, value);
          onChanged();
        } else {
          signDescsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder addSignDescs(
          signrpc.SignerOuterClass.SignDescriptor.Builder builderForValue) {
        if (signDescsBuilder_ == null) {
          ensureSignDescsIsMutable();
          signDescs_.add(builderForValue.build());
          onChanged();
        } else {
          signDescsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder addSignDescs(
          int index, signrpc.SignerOuterClass.SignDescriptor.Builder builderForValue) {
        if (signDescsBuilder_ == null) {
          ensureSignDescsIsMutable();
          signDescs_.add(index, builderForValue.build());
          onChanged();
        } else {
          signDescsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder addAllSignDescs(
          java.lang.Iterable<? extends signrpc.SignerOuterClass.SignDescriptor> values) {
        if (signDescsBuilder_ == null) {
          ensureSignDescsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signDescs_);
          onChanged();
        } else {
          signDescsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder clearSignDescs() {
        if (signDescsBuilder_ == null) {
          signDescs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signDescsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public Builder removeSignDescs(int index) {
        if (signDescsBuilder_ == null) {
          ensureSignDescsIsMutable();
          signDescs_.remove(index);
          onChanged();
        } else {
          signDescsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public signrpc.SignerOuterClass.SignDescriptor.Builder getSignDescsBuilder(
          int index) {
        return getSignDescsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public signrpc.SignerOuterClass.SignDescriptorOrBuilder getSignDescsOrBuilder(
          int index) {
        if (signDescsBuilder_ == null) {
          return signDescs_.get(index);  } else {
          return signDescsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public java.util.List<? extends signrpc.SignerOuterClass.SignDescriptorOrBuilder> 
           getSignDescsOrBuilderList() {
        if (signDescsBuilder_ != null) {
          return signDescsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signDescs_);
        }
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public signrpc.SignerOuterClass.SignDescriptor.Builder addSignDescsBuilder() {
        return getSignDescsFieldBuilder().addBuilder(
            signrpc.SignerOuterClass.SignDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public signrpc.SignerOuterClass.SignDescriptor.Builder addSignDescsBuilder(
          int index) {
        return getSignDescsFieldBuilder().addBuilder(
            index, signrpc.SignerOuterClass.SignDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * A set of sign descriptors, for each input to be signed.
       * </pre>
       *
       * <code>repeated .signrpc.SignDescriptor sign_descs = 2;</code>
       */
      public java.util.List<signrpc.SignerOuterClass.SignDescriptor.Builder> 
           getSignDescsBuilderList() {
        return getSignDescsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          signrpc.SignerOuterClass.SignDescriptor, signrpc.SignerOuterClass.SignDescriptor.Builder, signrpc.SignerOuterClass.SignDescriptorOrBuilder> 
          getSignDescsFieldBuilder() {
        if (signDescsBuilder_ == null) {
          signDescsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              signrpc.SignerOuterClass.SignDescriptor, signrpc.SignerOuterClass.SignDescriptor.Builder, signrpc.SignerOuterClass.SignDescriptorOrBuilder>(
                  signDescs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          signDescs_ = null;
        }
        return signDescsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.SignReq)
    }

    // @@protoc_insertion_point(class_scope:signrpc.SignReq)
    private static final signrpc.SignerOuterClass.SignReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.SignReq();
    }

    public static signrpc.SignerOuterClass.SignReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignReq>
        PARSER = new com.google.protobuf.AbstractParser<SignReq>() {
      @java.lang.Override
      public SignReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.SignReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.SignResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *A set of signatures realized in a fixed 64-byte format ordered in ascending
     *input order.
     * </pre>
     *
     * <code>repeated bytes raw_sigs = 1;</code>
     * @return A list containing the rawSigs.
     */
    java.util.List<com.google.protobuf.ByteString> getRawSigsList();
    /**
     * <pre>
     *A set of signatures realized in a fixed 64-byte format ordered in ascending
     *input order.
     * </pre>
     *
     * <code>repeated bytes raw_sigs = 1;</code>
     * @return The count of rawSigs.
     */
    int getRawSigsCount();
    /**
     * <pre>
     *A set of signatures realized in a fixed 64-byte format ordered in ascending
     *input order.
     * </pre>
     *
     * <code>repeated bytes raw_sigs = 1;</code>
     * @param index The index of the element to return.
     * @return The rawSigs at the given index.
     */
    com.google.protobuf.ByteString getRawSigs(int index);
  }
  /**
   * Protobuf type {@code signrpc.SignResp}
   */
  public static final class SignResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.SignResp)
      SignRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignResp.newBuilder() to construct.
    private SignResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignResp() {
      rawSigs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rawSigs_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              rawSigs_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rawSigs_ = java.util.Collections.unmodifiableList(rawSigs_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.SignResp.class, signrpc.SignerOuterClass.SignResp.Builder.class);
    }

    public static final int RAW_SIGS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> rawSigs_;
    /**
     * <pre>
     *A set of signatures realized in a fixed 64-byte format ordered in ascending
     *input order.
     * </pre>
     *
     * <code>repeated bytes raw_sigs = 1;</code>
     * @return A list containing the rawSigs.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getRawSigsList() {
      return rawSigs_;
    }
    /**
     * <pre>
     *A set of signatures realized in a fixed 64-byte format ordered in ascending
     *input order.
     * </pre>
     *
     * <code>repeated bytes raw_sigs = 1;</code>
     * @return The count of rawSigs.
     */
    public int getRawSigsCount() {
      return rawSigs_.size();
    }
    /**
     * <pre>
     *A set of signatures realized in a fixed 64-byte format ordered in ascending
     *input order.
     * </pre>
     *
     * <code>repeated bytes raw_sigs = 1;</code>
     * @param index The index of the element to return.
     * @return The rawSigs at the given index.
     */
    public com.google.protobuf.ByteString getRawSigs(int index) {
      return rawSigs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rawSigs_.size(); i++) {
        output.writeBytes(1, rawSigs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < rawSigs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(rawSigs_.get(i));
        }
        size += dataSize;
        size += 1 * getRawSigsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.SignResp)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.SignResp other = (signrpc.SignerOuterClass.SignResp) obj;

      if (!getRawSigsList()
          .equals(other.getRawSigsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRawSigsCount() > 0) {
        hash = (37 * hash) + RAW_SIGS_FIELD_NUMBER;
        hash = (53 * hash) + getRawSigsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.SignResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.SignResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.SignResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.SignResp)
        signrpc.SignerOuterClass.SignRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.SignResp.class, signrpc.SignerOuterClass.SignResp.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.SignResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        rawSigs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignResp_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignResp getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.SignResp.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignResp build() {
        signrpc.SignerOuterClass.SignResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignResp buildPartial() {
        signrpc.SignerOuterClass.SignResp result = new signrpc.SignerOuterClass.SignResp(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          rawSigs_ = java.util.Collections.unmodifiableList(rawSigs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.rawSigs_ = rawSigs_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.SignResp) {
          return mergeFrom((signrpc.SignerOuterClass.SignResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.SignResp other) {
        if (other == signrpc.SignerOuterClass.SignResp.getDefaultInstance()) return this;
        if (!other.rawSigs_.isEmpty()) {
          if (rawSigs_.isEmpty()) {
            rawSigs_ = other.rawSigs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRawSigsIsMutable();
            rawSigs_.addAll(other.rawSigs_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.SignResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.SignResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.protobuf.ByteString> rawSigs_ = java.util.Collections.emptyList();
      private void ensureRawSigsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rawSigs_ = new java.util.ArrayList<com.google.protobuf.ByteString>(rawSigs_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *A set of signatures realized in a fixed 64-byte format ordered in ascending
       *input order.
       * </pre>
       *
       * <code>repeated bytes raw_sigs = 1;</code>
       * @return A list containing the rawSigs.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getRawSigsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(rawSigs_) : rawSigs_;
      }
      /**
       * <pre>
       *A set of signatures realized in a fixed 64-byte format ordered in ascending
       *input order.
       * </pre>
       *
       * <code>repeated bytes raw_sigs = 1;</code>
       * @return The count of rawSigs.
       */
      public int getRawSigsCount() {
        return rawSigs_.size();
      }
      /**
       * <pre>
       *A set of signatures realized in a fixed 64-byte format ordered in ascending
       *input order.
       * </pre>
       *
       * <code>repeated bytes raw_sigs = 1;</code>
       * @param index The index of the element to return.
       * @return The rawSigs at the given index.
       */
      public com.google.protobuf.ByteString getRawSigs(int index) {
        return rawSigs_.get(index);
      }
      /**
       * <pre>
       *A set of signatures realized in a fixed 64-byte format ordered in ascending
       *input order.
       * </pre>
       *
       * <code>repeated bytes raw_sigs = 1;</code>
       * @param index The index to set the value at.
       * @param value The rawSigs to set.
       * @return This builder for chaining.
       */
      public Builder setRawSigs(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRawSigsIsMutable();
        rawSigs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A set of signatures realized in a fixed 64-byte format ordered in ascending
       *input order.
       * </pre>
       *
       * <code>repeated bytes raw_sigs = 1;</code>
       * @param value The rawSigs to add.
       * @return This builder for chaining.
       */
      public Builder addRawSigs(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRawSigsIsMutable();
        rawSigs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A set of signatures realized in a fixed 64-byte format ordered in ascending
       *input order.
       * </pre>
       *
       * <code>repeated bytes raw_sigs = 1;</code>
       * @param values The rawSigs to add.
       * @return This builder for chaining.
       */
      public Builder addAllRawSigs(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureRawSigsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rawSigs_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A set of signatures realized in a fixed 64-byte format ordered in ascending
       *input order.
       * </pre>
       *
       * <code>repeated bytes raw_sigs = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawSigs() {
        rawSigs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.SignResp)
    }

    // @@protoc_insertion_point(class_scope:signrpc.SignResp)
    private static final signrpc.SignerOuterClass.SignResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.SignResp();
    }

    public static signrpc.SignerOuterClass.SignResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignResp>
        PARSER = new com.google.protobuf.AbstractParser<SignResp>() {
      @java.lang.Override
      public SignResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.SignResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InputScriptOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.InputScript)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The serializes witness stack for the specified input.
     * </pre>
     *
     * <code>repeated bytes witness = 1;</code>
     * @return A list containing the witness.
     */
    java.util.List<com.google.protobuf.ByteString> getWitnessList();
    /**
     * <pre>
     * The serializes witness stack for the specified input.
     * </pre>
     *
     * <code>repeated bytes witness = 1;</code>
     * @return The count of witness.
     */
    int getWitnessCount();
    /**
     * <pre>
     * The serializes witness stack for the specified input.
     * </pre>
     *
     * <code>repeated bytes witness = 1;</code>
     * @param index The index of the element to return.
     * @return The witness at the given index.
     */
    com.google.protobuf.ByteString getWitness(int index);

    /**
     * <pre>
     *The optional sig script for the specified witness that will only be set if
     *the input specified is a nested p2sh witness program.
     * </pre>
     *
     * <code>bytes sig_script = 2;</code>
     * @return The sigScript.
     */
    com.google.protobuf.ByteString getSigScript();
  }
  /**
   * Protobuf type {@code signrpc.InputScript}
   */
  public static final class InputScript extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.InputScript)
      InputScriptOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InputScript.newBuilder() to construct.
    private InputScript(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InputScript() {
      witness_ = java.util.Collections.emptyList();
      sigScript_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InputScript();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InputScript(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                witness_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              witness_.add(input.readBytes());
              break;
            }
            case 18: {

              sigScript_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          witness_ = java.util.Collections.unmodifiableList(witness_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_InputScript_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_InputScript_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.InputScript.class, signrpc.SignerOuterClass.InputScript.Builder.class);
    }

    public static final int WITNESS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> witness_;
    /**
     * <pre>
     * The serializes witness stack for the specified input.
     * </pre>
     *
     * <code>repeated bytes witness = 1;</code>
     * @return A list containing the witness.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getWitnessList() {
      return witness_;
    }
    /**
     * <pre>
     * The serializes witness stack for the specified input.
     * </pre>
     *
     * <code>repeated bytes witness = 1;</code>
     * @return The count of witness.
     */
    public int getWitnessCount() {
      return witness_.size();
    }
    /**
     * <pre>
     * The serializes witness stack for the specified input.
     * </pre>
     *
     * <code>repeated bytes witness = 1;</code>
     * @param index The index of the element to return.
     * @return The witness at the given index.
     */
    public com.google.protobuf.ByteString getWitness(int index) {
      return witness_.get(index);
    }

    public static final int SIG_SCRIPT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString sigScript_;
    /**
     * <pre>
     *The optional sig script for the specified witness that will only be set if
     *the input specified is a nested p2sh witness program.
     * </pre>
     *
     * <code>bytes sig_script = 2;</code>
     * @return The sigScript.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSigScript() {
      return sigScript_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < witness_.size(); i++) {
        output.writeBytes(1, witness_.get(i));
      }
      if (!sigScript_.isEmpty()) {
        output.writeBytes(2, sigScript_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < witness_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(witness_.get(i));
        }
        size += dataSize;
        size += 1 * getWitnessList().size();
      }
      if (!sigScript_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, sigScript_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.InputScript)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.InputScript other = (signrpc.SignerOuterClass.InputScript) obj;

      if (!getWitnessList()
          .equals(other.getWitnessList())) return false;
      if (!getSigScript()
          .equals(other.getSigScript())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getWitnessCount() > 0) {
        hash = (37 * hash) + WITNESS_FIELD_NUMBER;
        hash = (53 * hash) + getWitnessList().hashCode();
      }
      hash = (37 * hash) + SIG_SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getSigScript().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.InputScript parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScript parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.InputScript parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.InputScript parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.InputScript prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.InputScript}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.InputScript)
        signrpc.SignerOuterClass.InputScriptOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_InputScript_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_InputScript_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.InputScript.class, signrpc.SignerOuterClass.InputScript.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.InputScript.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        witness_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        sigScript_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_InputScript_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.InputScript getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.InputScript.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.InputScript build() {
        signrpc.SignerOuterClass.InputScript result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.InputScript buildPartial() {
        signrpc.SignerOuterClass.InputScript result = new signrpc.SignerOuterClass.InputScript(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          witness_ = java.util.Collections.unmodifiableList(witness_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.witness_ = witness_;
        result.sigScript_ = sigScript_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.InputScript) {
          return mergeFrom((signrpc.SignerOuterClass.InputScript)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.InputScript other) {
        if (other == signrpc.SignerOuterClass.InputScript.getDefaultInstance()) return this;
        if (!other.witness_.isEmpty()) {
          if (witness_.isEmpty()) {
            witness_ = other.witness_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWitnessIsMutable();
            witness_.addAll(other.witness_);
          }
          onChanged();
        }
        if (other.getSigScript() != com.google.protobuf.ByteString.EMPTY) {
          setSigScript(other.getSigScript());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.InputScript parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.InputScript) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.protobuf.ByteString> witness_ = java.util.Collections.emptyList();
      private void ensureWitnessIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          witness_ = new java.util.ArrayList<com.google.protobuf.ByteString>(witness_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The serializes witness stack for the specified input.
       * </pre>
       *
       * <code>repeated bytes witness = 1;</code>
       * @return A list containing the witness.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getWitnessList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(witness_) : witness_;
      }
      /**
       * <pre>
       * The serializes witness stack for the specified input.
       * </pre>
       *
       * <code>repeated bytes witness = 1;</code>
       * @return The count of witness.
       */
      public int getWitnessCount() {
        return witness_.size();
      }
      /**
       * <pre>
       * The serializes witness stack for the specified input.
       * </pre>
       *
       * <code>repeated bytes witness = 1;</code>
       * @param index The index of the element to return.
       * @return The witness at the given index.
       */
      public com.google.protobuf.ByteString getWitness(int index) {
        return witness_.get(index);
      }
      /**
       * <pre>
       * The serializes witness stack for the specified input.
       * </pre>
       *
       * <code>repeated bytes witness = 1;</code>
       * @param index The index to set the value at.
       * @param value The witness to set.
       * @return This builder for chaining.
       */
      public Builder setWitness(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWitnessIsMutable();
        witness_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The serializes witness stack for the specified input.
       * </pre>
       *
       * <code>repeated bytes witness = 1;</code>
       * @param value The witness to add.
       * @return This builder for chaining.
       */
      public Builder addWitness(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWitnessIsMutable();
        witness_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The serializes witness stack for the specified input.
       * </pre>
       *
       * <code>repeated bytes witness = 1;</code>
       * @param values The witness to add.
       * @return This builder for chaining.
       */
      public Builder addAllWitness(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureWitnessIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, witness_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The serializes witness stack for the specified input.
       * </pre>
       *
       * <code>repeated bytes witness = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearWitness() {
        witness_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString sigScript_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *The optional sig script for the specified witness that will only be set if
       *the input specified is a nested p2sh witness program.
       * </pre>
       *
       * <code>bytes sig_script = 2;</code>
       * @return The sigScript.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSigScript() {
        return sigScript_;
      }
      /**
       * <pre>
       *The optional sig script for the specified witness that will only be set if
       *the input specified is a nested p2sh witness program.
       * </pre>
       *
       * <code>bytes sig_script = 2;</code>
       * @param value The sigScript to set.
       * @return This builder for chaining.
       */
      public Builder setSigScript(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sigScript_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The optional sig script for the specified witness that will only be set if
       *the input specified is a nested p2sh witness program.
       * </pre>
       *
       * <code>bytes sig_script = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSigScript() {
        
        sigScript_ = getDefaultInstance().getSigScript();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.InputScript)
    }

    // @@protoc_insertion_point(class_scope:signrpc.InputScript)
    private static final signrpc.SignerOuterClass.InputScript DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.InputScript();
    }

    public static signrpc.SignerOuterClass.InputScript getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InputScript>
        PARSER = new com.google.protobuf.AbstractParser<InputScript>() {
      @java.lang.Override
      public InputScript parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InputScript(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InputScript> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InputScript> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.InputScript getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InputScriptRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.InputScriptResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    java.util.List<signrpc.SignerOuterClass.InputScript> 
        getInputScriptsList();
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    signrpc.SignerOuterClass.InputScript getInputScripts(int index);
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    int getInputScriptsCount();
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    java.util.List<? extends signrpc.SignerOuterClass.InputScriptOrBuilder> 
        getInputScriptsOrBuilderList();
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    signrpc.SignerOuterClass.InputScriptOrBuilder getInputScriptsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code signrpc.InputScriptResp}
   */
  public static final class InputScriptResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.InputScriptResp)
      InputScriptRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InputScriptResp.newBuilder() to construct.
    private InputScriptResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InputScriptResp() {
      inputScripts_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InputScriptResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InputScriptResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                inputScripts_ = new java.util.ArrayList<signrpc.SignerOuterClass.InputScript>();
                mutable_bitField0_ |= 0x00000001;
              }
              inputScripts_.add(
                  input.readMessage(signrpc.SignerOuterClass.InputScript.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          inputScripts_ = java.util.Collections.unmodifiableList(inputScripts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_InputScriptResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_InputScriptResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.InputScriptResp.class, signrpc.SignerOuterClass.InputScriptResp.Builder.class);
    }

    public static final int INPUT_SCRIPTS_FIELD_NUMBER = 1;
    private java.util.List<signrpc.SignerOuterClass.InputScript> inputScripts_;
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    @java.lang.Override
    public java.util.List<signrpc.SignerOuterClass.InputScript> getInputScriptsList() {
      return inputScripts_;
    }
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends signrpc.SignerOuterClass.InputScriptOrBuilder> 
        getInputScriptsOrBuilderList() {
      return inputScripts_;
    }
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    @java.lang.Override
    public int getInputScriptsCount() {
      return inputScripts_.size();
    }
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.InputScript getInputScripts(int index) {
      return inputScripts_.get(index);
    }
    /**
     * <pre>
     * The set of fully valid input scripts requested.
     * </pre>
     *
     * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.InputScriptOrBuilder getInputScriptsOrBuilder(
        int index) {
      return inputScripts_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < inputScripts_.size(); i++) {
        output.writeMessage(1, inputScripts_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < inputScripts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, inputScripts_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.InputScriptResp)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.InputScriptResp other = (signrpc.SignerOuterClass.InputScriptResp) obj;

      if (!getInputScriptsList()
          .equals(other.getInputScriptsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getInputScriptsCount() > 0) {
        hash = (37 * hash) + INPUT_SCRIPTS_FIELD_NUMBER;
        hash = (53 * hash) + getInputScriptsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.InputScriptResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.InputScriptResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.InputScriptResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.InputScriptResp)
        signrpc.SignerOuterClass.InputScriptRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_InputScriptResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_InputScriptResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.InputScriptResp.class, signrpc.SignerOuterClass.InputScriptResp.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.InputScriptResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInputScriptsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (inputScriptsBuilder_ == null) {
          inputScripts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          inputScriptsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_InputScriptResp_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.InputScriptResp getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.InputScriptResp.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.InputScriptResp build() {
        signrpc.SignerOuterClass.InputScriptResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.InputScriptResp buildPartial() {
        signrpc.SignerOuterClass.InputScriptResp result = new signrpc.SignerOuterClass.InputScriptResp(this);
        int from_bitField0_ = bitField0_;
        if (inputScriptsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            inputScripts_ = java.util.Collections.unmodifiableList(inputScripts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.inputScripts_ = inputScripts_;
        } else {
          result.inputScripts_ = inputScriptsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.InputScriptResp) {
          return mergeFrom((signrpc.SignerOuterClass.InputScriptResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.InputScriptResp other) {
        if (other == signrpc.SignerOuterClass.InputScriptResp.getDefaultInstance()) return this;
        if (inputScriptsBuilder_ == null) {
          if (!other.inputScripts_.isEmpty()) {
            if (inputScripts_.isEmpty()) {
              inputScripts_ = other.inputScripts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInputScriptsIsMutable();
              inputScripts_.addAll(other.inputScripts_);
            }
            onChanged();
          }
        } else {
          if (!other.inputScripts_.isEmpty()) {
            if (inputScriptsBuilder_.isEmpty()) {
              inputScriptsBuilder_.dispose();
              inputScriptsBuilder_ = null;
              inputScripts_ = other.inputScripts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              inputScriptsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInputScriptsFieldBuilder() : null;
            } else {
              inputScriptsBuilder_.addAllMessages(other.inputScripts_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.InputScriptResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.InputScriptResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<signrpc.SignerOuterClass.InputScript> inputScripts_ =
        java.util.Collections.emptyList();
      private void ensureInputScriptsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          inputScripts_ = new java.util.ArrayList<signrpc.SignerOuterClass.InputScript>(inputScripts_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          signrpc.SignerOuterClass.InputScript, signrpc.SignerOuterClass.InputScript.Builder, signrpc.SignerOuterClass.InputScriptOrBuilder> inputScriptsBuilder_;

      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public java.util.List<signrpc.SignerOuterClass.InputScript> getInputScriptsList() {
        if (inputScriptsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputScripts_);
        } else {
          return inputScriptsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public int getInputScriptsCount() {
        if (inputScriptsBuilder_ == null) {
          return inputScripts_.size();
        } else {
          return inputScriptsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public signrpc.SignerOuterClass.InputScript getInputScripts(int index) {
        if (inputScriptsBuilder_ == null) {
          return inputScripts_.get(index);
        } else {
          return inputScriptsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder setInputScripts(
          int index, signrpc.SignerOuterClass.InputScript value) {
        if (inputScriptsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputScriptsIsMutable();
          inputScripts_.set(index, value);
          onChanged();
        } else {
          inputScriptsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder setInputScripts(
          int index, signrpc.SignerOuterClass.InputScript.Builder builderForValue) {
        if (inputScriptsBuilder_ == null) {
          ensureInputScriptsIsMutable();
          inputScripts_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputScriptsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder addInputScripts(signrpc.SignerOuterClass.InputScript value) {
        if (inputScriptsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputScriptsIsMutable();
          inputScripts_.add(value);
          onChanged();
        } else {
          inputScriptsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder addInputScripts(
          int index, signrpc.SignerOuterClass.InputScript value) {
        if (inputScriptsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputScriptsIsMutable();
          inputScripts_.add(index, value);
          onChanged();
        } else {
          inputScriptsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder addInputScripts(
          signrpc.SignerOuterClass.InputScript.Builder builderForValue) {
        if (inputScriptsBuilder_ == null) {
          ensureInputScriptsIsMutable();
          inputScripts_.add(builderForValue.build());
          onChanged();
        } else {
          inputScriptsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder addInputScripts(
          int index, signrpc.SignerOuterClass.InputScript.Builder builderForValue) {
        if (inputScriptsBuilder_ == null) {
          ensureInputScriptsIsMutable();
          inputScripts_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputScriptsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder addAllInputScripts(
          java.lang.Iterable<? extends signrpc.SignerOuterClass.InputScript> values) {
        if (inputScriptsBuilder_ == null) {
          ensureInputScriptsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inputScripts_);
          onChanged();
        } else {
          inputScriptsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder clearInputScripts() {
        if (inputScriptsBuilder_ == null) {
          inputScripts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          inputScriptsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public Builder removeInputScripts(int index) {
        if (inputScriptsBuilder_ == null) {
          ensureInputScriptsIsMutable();
          inputScripts_.remove(index);
          onChanged();
        } else {
          inputScriptsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public signrpc.SignerOuterClass.InputScript.Builder getInputScriptsBuilder(
          int index) {
        return getInputScriptsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public signrpc.SignerOuterClass.InputScriptOrBuilder getInputScriptsOrBuilder(
          int index) {
        if (inputScriptsBuilder_ == null) {
          return inputScripts_.get(index);  } else {
          return inputScriptsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public java.util.List<? extends signrpc.SignerOuterClass.InputScriptOrBuilder> 
           getInputScriptsOrBuilderList() {
        if (inputScriptsBuilder_ != null) {
          return inputScriptsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputScripts_);
        }
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public signrpc.SignerOuterClass.InputScript.Builder addInputScriptsBuilder() {
        return getInputScriptsFieldBuilder().addBuilder(
            signrpc.SignerOuterClass.InputScript.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public signrpc.SignerOuterClass.InputScript.Builder addInputScriptsBuilder(
          int index) {
        return getInputScriptsFieldBuilder().addBuilder(
            index, signrpc.SignerOuterClass.InputScript.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of fully valid input scripts requested.
       * </pre>
       *
       * <code>repeated .signrpc.InputScript input_scripts = 1;</code>
       */
      public java.util.List<signrpc.SignerOuterClass.InputScript.Builder> 
           getInputScriptsBuilderList() {
        return getInputScriptsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          signrpc.SignerOuterClass.InputScript, signrpc.SignerOuterClass.InputScript.Builder, signrpc.SignerOuterClass.InputScriptOrBuilder> 
          getInputScriptsFieldBuilder() {
        if (inputScriptsBuilder_ == null) {
          inputScriptsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              signrpc.SignerOuterClass.InputScript, signrpc.SignerOuterClass.InputScript.Builder, signrpc.SignerOuterClass.InputScriptOrBuilder>(
                  inputScripts_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          inputScripts_ = null;
        }
        return inputScriptsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.InputScriptResp)
    }

    // @@protoc_insertion_point(class_scope:signrpc.InputScriptResp)
    private static final signrpc.SignerOuterClass.InputScriptResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.InputScriptResp();
    }

    public static signrpc.SignerOuterClass.InputScriptResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InputScriptResp>
        PARSER = new com.google.protobuf.AbstractParser<InputScriptResp>() {
      @java.lang.Override
      public InputScriptResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InputScriptResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InputScriptResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InputScriptResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.InputScriptResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignMessageReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.SignMessageReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The message to be signed.
     * </pre>
     *
     * <code>bytes msg = 1;</code>
     * @return The msg.
     */
    com.google.protobuf.ByteString getMsg();

    /**
     * <pre>
     * The key locator that identifies which key to use for signing.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return Whether the keyLoc field is set.
     */
    boolean hasKeyLoc();
    /**
     * <pre>
     * The key locator that identifies which key to use for signing.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return The keyLoc.
     */
    signrpc.SignerOuterClass.KeyLocator getKeyLoc();
    /**
     * <pre>
     * The key locator that identifies which key to use for signing.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     */
    signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder();
  }
  /**
   * Protobuf type {@code signrpc.SignMessageReq}
   */
  public static final class SignMessageReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.SignMessageReq)
      SignMessageReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignMessageReq.newBuilder() to construct.
    private SignMessageReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignMessageReq() {
      msg_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignMessageReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignMessageReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              msg_ = input.readBytes();
              break;
            }
            case 18: {
              signrpc.SignerOuterClass.KeyLocator.Builder subBuilder = null;
              if (keyLoc_ != null) {
                subBuilder = keyLoc_.toBuilder();
              }
              keyLoc_ = input.readMessage(signrpc.SignerOuterClass.KeyLocator.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyLoc_);
                keyLoc_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.SignMessageReq.class, signrpc.SignerOuterClass.SignMessageReq.Builder.class);
    }

    public static final int MSG_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString msg_;
    /**
     * <pre>
     * The message to be signed.
     * </pre>
     *
     * <code>bytes msg = 1;</code>
     * @return The msg.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMsg() {
      return msg_;
    }

    public static final int KEY_LOC_FIELD_NUMBER = 2;
    private signrpc.SignerOuterClass.KeyLocator keyLoc_;
    /**
     * <pre>
     * The key locator that identifies which key to use for signing.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return Whether the keyLoc field is set.
     */
    @java.lang.Override
    public boolean hasKeyLoc() {
      return keyLoc_ != null;
    }
    /**
     * <pre>
     * The key locator that identifies which key to use for signing.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return The keyLoc.
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.KeyLocator getKeyLoc() {
      return keyLoc_ == null ? signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
    }
    /**
     * <pre>
     * The key locator that identifies which key to use for signing.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder() {
      return getKeyLoc();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!msg_.isEmpty()) {
        output.writeBytes(1, msg_);
      }
      if (keyLoc_ != null) {
        output.writeMessage(2, getKeyLoc());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!msg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, msg_);
      }
      if (keyLoc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getKeyLoc());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.SignMessageReq)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.SignMessageReq other = (signrpc.SignerOuterClass.SignMessageReq) obj;

      if (!getMsg()
          .equals(other.getMsg())) return false;
      if (hasKeyLoc() != other.hasKeyLoc()) return false;
      if (hasKeyLoc()) {
        if (!getKeyLoc()
            .equals(other.getKeyLoc())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MSG_FIELD_NUMBER;
      hash = (53 * hash) + getMsg().hashCode();
      if (hasKeyLoc()) {
        hash = (37 * hash) + KEY_LOC_FIELD_NUMBER;
        hash = (53 * hash) + getKeyLoc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignMessageReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.SignMessageReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.SignMessageReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.SignMessageReq)
        signrpc.SignerOuterClass.SignMessageReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.SignMessageReq.class, signrpc.SignerOuterClass.SignMessageReq.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.SignMessageReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        msg_ = com.google.protobuf.ByteString.EMPTY;

        if (keyLocBuilder_ == null) {
          keyLoc_ = null;
        } else {
          keyLoc_ = null;
          keyLocBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageReq_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignMessageReq getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.SignMessageReq.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignMessageReq build() {
        signrpc.SignerOuterClass.SignMessageReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignMessageReq buildPartial() {
        signrpc.SignerOuterClass.SignMessageReq result = new signrpc.SignerOuterClass.SignMessageReq(this);
        result.msg_ = msg_;
        if (keyLocBuilder_ == null) {
          result.keyLoc_ = keyLoc_;
        } else {
          result.keyLoc_ = keyLocBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.SignMessageReq) {
          return mergeFrom((signrpc.SignerOuterClass.SignMessageReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.SignMessageReq other) {
        if (other == signrpc.SignerOuterClass.SignMessageReq.getDefaultInstance()) return this;
        if (other.getMsg() != com.google.protobuf.ByteString.EMPTY) {
          setMsg(other.getMsg());
        }
        if (other.hasKeyLoc()) {
          mergeKeyLoc(other.getKeyLoc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.SignMessageReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.SignMessageReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString msg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The message to be signed.
       * </pre>
       *
       * <code>bytes msg = 1;</code>
       * @return The msg.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMsg() {
        return msg_;
      }
      /**
       * <pre>
       * The message to be signed.
       * </pre>
       *
       * <code>bytes msg = 1;</code>
       * @param value The msg to set.
       * @return This builder for chaining.
       */
      public Builder setMsg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message to be signed.
       * </pre>
       *
       * <code>bytes msg = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsg() {
        
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }

      private signrpc.SignerOuterClass.KeyLocator keyLoc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder> keyLocBuilder_;
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       * @return Whether the keyLoc field is set.
       */
      public boolean hasKeyLoc() {
        return keyLocBuilder_ != null || keyLoc_ != null;
      }
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       * @return The keyLoc.
       */
      public signrpc.SignerOuterClass.KeyLocator getKeyLoc() {
        if (keyLocBuilder_ == null) {
          return keyLoc_ == null ? signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
        } else {
          return keyLocBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder setKeyLoc(signrpc.SignerOuterClass.KeyLocator value) {
        if (keyLocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyLoc_ = value;
          onChanged();
        } else {
          keyLocBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder setKeyLoc(
          signrpc.SignerOuterClass.KeyLocator.Builder builderForValue) {
        if (keyLocBuilder_ == null) {
          keyLoc_ = builderForValue.build();
          onChanged();
        } else {
          keyLocBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder mergeKeyLoc(signrpc.SignerOuterClass.KeyLocator value) {
        if (keyLocBuilder_ == null) {
          if (keyLoc_ != null) {
            keyLoc_ =
              signrpc.SignerOuterClass.KeyLocator.newBuilder(keyLoc_).mergeFrom(value).buildPartial();
          } else {
            keyLoc_ = value;
          }
          onChanged();
        } else {
          keyLocBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder clearKeyLoc() {
        if (keyLocBuilder_ == null) {
          keyLoc_ = null;
          onChanged();
        } else {
          keyLoc_ = null;
          keyLocBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public signrpc.SignerOuterClass.KeyLocator.Builder getKeyLocBuilder() {
        
        onChanged();
        return getKeyLocFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder() {
        if (keyLocBuilder_ != null) {
          return keyLocBuilder_.getMessageOrBuilder();
        } else {
          return keyLoc_ == null ?
              signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
        }
      }
      /**
       * <pre>
       * The key locator that identifies which key to use for signing.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder> 
          getKeyLocFieldBuilder() {
        if (keyLocBuilder_ == null) {
          keyLocBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder>(
                  getKeyLoc(),
                  getParentForChildren(),
                  isClean());
          keyLoc_ = null;
        }
        return keyLocBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.SignMessageReq)
    }

    // @@protoc_insertion_point(class_scope:signrpc.SignMessageReq)
    private static final signrpc.SignerOuterClass.SignMessageReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.SignMessageReq();
    }

    public static signrpc.SignerOuterClass.SignMessageReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignMessageReq>
        PARSER = new com.google.protobuf.AbstractParser<SignMessageReq>() {
      @java.lang.Override
      public SignMessageReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignMessageReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignMessageReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignMessageReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.SignMessageReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignMessageRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.SignMessageResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *The signature for the given message in the fixed-size LN wire format.
     * </pre>
     *
     * <code>bytes signature = 1;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code signrpc.SignMessageResp}
   */
  public static final class SignMessageResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.SignMessageResp)
      SignMessageRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignMessageResp.newBuilder() to construct.
    private SignMessageResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignMessageResp() {
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignMessageResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignMessageResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              signature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.SignMessageResp.class, signrpc.SignerOuterClass.SignMessageResp.Builder.class);
    }

    public static final int SIGNATURE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     *The signature for the given message in the fixed-size LN wire format.
     * </pre>
     *
     * <code>bytes signature = 1;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!signature_.isEmpty()) {
        output.writeBytes(1, signature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.SignMessageResp)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.SignMessageResp other = (signrpc.SignerOuterClass.SignMessageResp) obj;

      if (!getSignature()
          .equals(other.getSignature())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SignMessageResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.SignMessageResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.SignMessageResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.SignMessageResp)
        signrpc.SignerOuterClass.SignMessageRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.SignMessageResp.class, signrpc.SignerOuterClass.SignMessageResp.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.SignMessageResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        signature_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SignMessageResp_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignMessageResp getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.SignMessageResp.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignMessageResp build() {
        signrpc.SignerOuterClass.SignMessageResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SignMessageResp buildPartial() {
        signrpc.SignerOuterClass.SignMessageResp result = new signrpc.SignerOuterClass.SignMessageResp(this);
        result.signature_ = signature_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.SignMessageResp) {
          return mergeFrom((signrpc.SignerOuterClass.SignMessageResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.SignMessageResp other) {
        if (other == signrpc.SignerOuterClass.SignMessageResp.getDefaultInstance()) return this;
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.SignMessageResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.SignMessageResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *The signature for the given message in the fixed-size LN wire format.
       * </pre>
       *
       * <code>bytes signature = 1;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       *The signature for the given message in the fixed-size LN wire format.
       * </pre>
       *
       * <code>bytes signature = 1;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The signature for the given message in the fixed-size LN wire format.
       * </pre>
       *
       * <code>bytes signature = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.SignMessageResp)
    }

    // @@protoc_insertion_point(class_scope:signrpc.SignMessageResp)
    private static final signrpc.SignerOuterClass.SignMessageResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.SignMessageResp();
    }

    public static signrpc.SignerOuterClass.SignMessageResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignMessageResp>
        PARSER = new com.google.protobuf.AbstractParser<SignMessageResp>() {
      @java.lang.Override
      public SignMessageResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignMessageResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignMessageResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignMessageResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.SignMessageResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VerifyMessageReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.VerifyMessageReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The message over which the signature is to be verified.
     * </pre>
     *
     * <code>bytes msg = 1;</code>
     * @return The msg.
     */
    com.google.protobuf.ByteString getMsg();

    /**
     * <pre>
     *The fixed-size LN wire encoded signature to be verified over the given
     *message.
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <pre>
     * The public key the signature has to be valid for.
     * </pre>
     *
     * <code>bytes pubkey = 3;</code>
     * @return The pubkey.
     */
    com.google.protobuf.ByteString getPubkey();
  }
  /**
   * Protobuf type {@code signrpc.VerifyMessageReq}
   */
  public static final class VerifyMessageReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.VerifyMessageReq)
      VerifyMessageReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VerifyMessageReq.newBuilder() to construct.
    private VerifyMessageReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VerifyMessageReq() {
      msg_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
      pubkey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VerifyMessageReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VerifyMessageReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              msg_ = input.readBytes();
              break;
            }
            case 18: {

              signature_ = input.readBytes();
              break;
            }
            case 26: {

              pubkey_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.VerifyMessageReq.class, signrpc.SignerOuterClass.VerifyMessageReq.Builder.class);
    }

    public static final int MSG_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString msg_;
    /**
     * <pre>
     * The message over which the signature is to be verified.
     * </pre>
     *
     * <code>bytes msg = 1;</code>
     * @return The msg.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMsg() {
      return msg_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     *The fixed-size LN wire encoded signature to be verified over the given
     *message.
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    public static final int PUBKEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString pubkey_;
    /**
     * <pre>
     * The public key the signature has to be valid for.
     * </pre>
     *
     * <code>bytes pubkey = 3;</code>
     * @return The pubkey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPubkey() {
      return pubkey_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!msg_.isEmpty()) {
        output.writeBytes(1, msg_);
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(2, signature_);
      }
      if (!pubkey_.isEmpty()) {
        output.writeBytes(3, pubkey_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!msg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, msg_);
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signature_);
      }
      if (!pubkey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, pubkey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.VerifyMessageReq)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.VerifyMessageReq other = (signrpc.SignerOuterClass.VerifyMessageReq) obj;

      if (!getMsg()
          .equals(other.getMsg())) return false;
      if (!getSignature()
          .equals(other.getSignature())) return false;
      if (!getPubkey()
          .equals(other.getPubkey())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MSG_FIELD_NUMBER;
      hash = (53 * hash) + getMsg().hashCode();
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (37 * hash) + PUBKEY_FIELD_NUMBER;
      hash = (53 * hash) + getPubkey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.VerifyMessageReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.VerifyMessageReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.VerifyMessageReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.VerifyMessageReq)
        signrpc.SignerOuterClass.VerifyMessageReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.VerifyMessageReq.class, signrpc.SignerOuterClass.VerifyMessageReq.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.VerifyMessageReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        msg_ = com.google.protobuf.ByteString.EMPTY;

        signature_ = com.google.protobuf.ByteString.EMPTY;

        pubkey_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageReq_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.VerifyMessageReq getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.VerifyMessageReq.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.VerifyMessageReq build() {
        signrpc.SignerOuterClass.VerifyMessageReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.VerifyMessageReq buildPartial() {
        signrpc.SignerOuterClass.VerifyMessageReq result = new signrpc.SignerOuterClass.VerifyMessageReq(this);
        result.msg_ = msg_;
        result.signature_ = signature_;
        result.pubkey_ = pubkey_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.VerifyMessageReq) {
          return mergeFrom((signrpc.SignerOuterClass.VerifyMessageReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.VerifyMessageReq other) {
        if (other == signrpc.SignerOuterClass.VerifyMessageReq.getDefaultInstance()) return this;
        if (other.getMsg() != com.google.protobuf.ByteString.EMPTY) {
          setMsg(other.getMsg());
        }
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        if (other.getPubkey() != com.google.protobuf.ByteString.EMPTY) {
          setPubkey(other.getPubkey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.VerifyMessageReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.VerifyMessageReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString msg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The message over which the signature is to be verified.
       * </pre>
       *
       * <code>bytes msg = 1;</code>
       * @return The msg.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMsg() {
        return msg_;
      }
      /**
       * <pre>
       * The message over which the signature is to be verified.
       * </pre>
       *
       * <code>bytes msg = 1;</code>
       * @param value The msg to set.
       * @return This builder for chaining.
       */
      public Builder setMsg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message over which the signature is to be verified.
       * </pre>
       *
       * <code>bytes msg = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsg() {
        
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *The fixed-size LN wire encoded signature to be verified over the given
       *message.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       *The fixed-size LN wire encoded signature to be verified over the given
       *message.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The fixed-size LN wire encoded signature to be verified over the given
       *message.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString pubkey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The public key the signature has to be valid for.
       * </pre>
       *
       * <code>bytes pubkey = 3;</code>
       * @return The pubkey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPubkey() {
        return pubkey_;
      }
      /**
       * <pre>
       * The public key the signature has to be valid for.
       * </pre>
       *
       * <code>bytes pubkey = 3;</code>
       * @param value The pubkey to set.
       * @return This builder for chaining.
       */
      public Builder setPubkey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pubkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The public key the signature has to be valid for.
       * </pre>
       *
       * <code>bytes pubkey = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPubkey() {
        
        pubkey_ = getDefaultInstance().getPubkey();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.VerifyMessageReq)
    }

    // @@protoc_insertion_point(class_scope:signrpc.VerifyMessageReq)
    private static final signrpc.SignerOuterClass.VerifyMessageReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.VerifyMessageReq();
    }

    public static signrpc.SignerOuterClass.VerifyMessageReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VerifyMessageReq>
        PARSER = new com.google.protobuf.AbstractParser<VerifyMessageReq>() {
      @java.lang.Override
      public VerifyMessageReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VerifyMessageReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VerifyMessageReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VerifyMessageReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.VerifyMessageReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VerifyMessageRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.VerifyMessageResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Whether the signature was valid over the given message.
     * </pre>
     *
     * <code>bool valid = 1;</code>
     * @return The valid.
     */
    boolean getValid();
  }
  /**
   * Protobuf type {@code signrpc.VerifyMessageResp}
   */
  public static final class VerifyMessageResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.VerifyMessageResp)
      VerifyMessageRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VerifyMessageResp.newBuilder() to construct.
    private VerifyMessageResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VerifyMessageResp() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VerifyMessageResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VerifyMessageResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              valid_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.VerifyMessageResp.class, signrpc.SignerOuterClass.VerifyMessageResp.Builder.class);
    }

    public static final int VALID_FIELD_NUMBER = 1;
    private boolean valid_;
    /**
     * <pre>
     * Whether the signature was valid over the given message.
     * </pre>
     *
     * <code>bool valid = 1;</code>
     * @return The valid.
     */
    @java.lang.Override
    public boolean getValid() {
      return valid_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valid_ != false) {
        output.writeBool(1, valid_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valid_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, valid_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.VerifyMessageResp)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.VerifyMessageResp other = (signrpc.SignerOuterClass.VerifyMessageResp) obj;

      if (getValid()
          != other.getValid()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getValid());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.VerifyMessageResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.VerifyMessageResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.VerifyMessageResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.VerifyMessageResp)
        signrpc.SignerOuterClass.VerifyMessageRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.VerifyMessageResp.class, signrpc.SignerOuterClass.VerifyMessageResp.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.VerifyMessageResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        valid_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_VerifyMessageResp_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.VerifyMessageResp getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.VerifyMessageResp.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.VerifyMessageResp build() {
        signrpc.SignerOuterClass.VerifyMessageResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.VerifyMessageResp buildPartial() {
        signrpc.SignerOuterClass.VerifyMessageResp result = new signrpc.SignerOuterClass.VerifyMessageResp(this);
        result.valid_ = valid_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.VerifyMessageResp) {
          return mergeFrom((signrpc.SignerOuterClass.VerifyMessageResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.VerifyMessageResp other) {
        if (other == signrpc.SignerOuterClass.VerifyMessageResp.getDefaultInstance()) return this;
        if (other.getValid() != false) {
          setValid(other.getValid());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.VerifyMessageResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.VerifyMessageResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean valid_ ;
      /**
       * <pre>
       * Whether the signature was valid over the given message.
       * </pre>
       *
       * <code>bool valid = 1;</code>
       * @return The valid.
       */
      @java.lang.Override
      public boolean getValid() {
        return valid_;
      }
      /**
       * <pre>
       * Whether the signature was valid over the given message.
       * </pre>
       *
       * <code>bool valid = 1;</code>
       * @param value The valid to set.
       * @return This builder for chaining.
       */
      public Builder setValid(boolean value) {
        
        valid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the signature was valid over the given message.
       * </pre>
       *
       * <code>bool valid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValid() {
        
        valid_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.VerifyMessageResp)
    }

    // @@protoc_insertion_point(class_scope:signrpc.VerifyMessageResp)
    private static final signrpc.SignerOuterClass.VerifyMessageResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.VerifyMessageResp();
    }

    public static signrpc.SignerOuterClass.VerifyMessageResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VerifyMessageResp>
        PARSER = new com.google.protobuf.AbstractParser<VerifyMessageResp>() {
      @java.lang.Override
      public VerifyMessageResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VerifyMessageResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VerifyMessageResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VerifyMessageResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.VerifyMessageResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SharedKeyRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.SharedKeyRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ephemeral public key to use for the DH key derivation.
     * </pre>
     *
     * <code>bytes ephemeral_pubkey = 1;</code>
     * @return The ephemeralPubkey.
     */
    com.google.protobuf.ByteString getEphemeralPubkey();

    /**
     * <pre>
     *The optional key locator of the local key that should be used. If this
     *parameter is not set then the node's identity private key will be used.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return Whether the keyLoc field is set.
     */
    boolean hasKeyLoc();
    /**
     * <pre>
     *The optional key locator of the local key that should be used. If this
     *parameter is not set then the node's identity private key will be used.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return The keyLoc.
     */
    signrpc.SignerOuterClass.KeyLocator getKeyLoc();
    /**
     * <pre>
     *The optional key locator of the local key that should be used. If this
     *parameter is not set then the node's identity private key will be used.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     */
    signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder();
  }
  /**
   * Protobuf type {@code signrpc.SharedKeyRequest}
   */
  public static final class SharedKeyRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.SharedKeyRequest)
      SharedKeyRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SharedKeyRequest.newBuilder() to construct.
    private SharedKeyRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SharedKeyRequest() {
      ephemeralPubkey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SharedKeyRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SharedKeyRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              ephemeralPubkey_ = input.readBytes();
              break;
            }
            case 18: {
              signrpc.SignerOuterClass.KeyLocator.Builder subBuilder = null;
              if (keyLoc_ != null) {
                subBuilder = keyLoc_.toBuilder();
              }
              keyLoc_ = input.readMessage(signrpc.SignerOuterClass.KeyLocator.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyLoc_);
                keyLoc_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.SharedKeyRequest.class, signrpc.SignerOuterClass.SharedKeyRequest.Builder.class);
    }

    public static final int EPHEMERAL_PUBKEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString ephemeralPubkey_;
    /**
     * <pre>
     * The ephemeral public key to use for the DH key derivation.
     * </pre>
     *
     * <code>bytes ephemeral_pubkey = 1;</code>
     * @return The ephemeralPubkey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEphemeralPubkey() {
      return ephemeralPubkey_;
    }

    public static final int KEY_LOC_FIELD_NUMBER = 2;
    private signrpc.SignerOuterClass.KeyLocator keyLoc_;
    /**
     * <pre>
     *The optional key locator of the local key that should be used. If this
     *parameter is not set then the node's identity private key will be used.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return Whether the keyLoc field is set.
     */
    @java.lang.Override
    public boolean hasKeyLoc() {
      return keyLoc_ != null;
    }
    /**
     * <pre>
     *The optional key locator of the local key that should be used. If this
     *parameter is not set then the node's identity private key will be used.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     * @return The keyLoc.
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.KeyLocator getKeyLoc() {
      return keyLoc_ == null ? signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
    }
    /**
     * <pre>
     *The optional key locator of the local key that should be used. If this
     *parameter is not set then the node's identity private key will be used.
     * </pre>
     *
     * <code>.signrpc.KeyLocator key_loc = 2;</code>
     */
    @java.lang.Override
    public signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder() {
      return getKeyLoc();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!ephemeralPubkey_.isEmpty()) {
        output.writeBytes(1, ephemeralPubkey_);
      }
      if (keyLoc_ != null) {
        output.writeMessage(2, getKeyLoc());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!ephemeralPubkey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, ephemeralPubkey_);
      }
      if (keyLoc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getKeyLoc());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.SharedKeyRequest)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.SharedKeyRequest other = (signrpc.SignerOuterClass.SharedKeyRequest) obj;

      if (!getEphemeralPubkey()
          .equals(other.getEphemeralPubkey())) return false;
      if (hasKeyLoc() != other.hasKeyLoc()) return false;
      if (hasKeyLoc()) {
        if (!getKeyLoc()
            .equals(other.getKeyLoc())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EPHEMERAL_PUBKEY_FIELD_NUMBER;
      hash = (53 * hash) + getEphemeralPubkey().hashCode();
      if (hasKeyLoc()) {
        hash = (37 * hash) + KEY_LOC_FIELD_NUMBER;
        hash = (53 * hash) + getKeyLoc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SharedKeyRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.SharedKeyRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.SharedKeyRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.SharedKeyRequest)
        signrpc.SignerOuterClass.SharedKeyRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.SharedKeyRequest.class, signrpc.SignerOuterClass.SharedKeyRequest.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.SharedKeyRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ephemeralPubkey_ = com.google.protobuf.ByteString.EMPTY;

        if (keyLocBuilder_ == null) {
          keyLoc_ = null;
        } else {
          keyLoc_ = null;
          keyLocBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyRequest_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SharedKeyRequest getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.SharedKeyRequest.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SharedKeyRequest build() {
        signrpc.SignerOuterClass.SharedKeyRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SharedKeyRequest buildPartial() {
        signrpc.SignerOuterClass.SharedKeyRequest result = new signrpc.SignerOuterClass.SharedKeyRequest(this);
        result.ephemeralPubkey_ = ephemeralPubkey_;
        if (keyLocBuilder_ == null) {
          result.keyLoc_ = keyLoc_;
        } else {
          result.keyLoc_ = keyLocBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.SharedKeyRequest) {
          return mergeFrom((signrpc.SignerOuterClass.SharedKeyRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.SharedKeyRequest other) {
        if (other == signrpc.SignerOuterClass.SharedKeyRequest.getDefaultInstance()) return this;
        if (other.getEphemeralPubkey() != com.google.protobuf.ByteString.EMPTY) {
          setEphemeralPubkey(other.getEphemeralPubkey());
        }
        if (other.hasKeyLoc()) {
          mergeKeyLoc(other.getKeyLoc());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.SharedKeyRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.SharedKeyRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString ephemeralPubkey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The ephemeral public key to use for the DH key derivation.
       * </pre>
       *
       * <code>bytes ephemeral_pubkey = 1;</code>
       * @return The ephemeralPubkey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEphemeralPubkey() {
        return ephemeralPubkey_;
      }
      /**
       * <pre>
       * The ephemeral public key to use for the DH key derivation.
       * </pre>
       *
       * <code>bytes ephemeral_pubkey = 1;</code>
       * @param value The ephemeralPubkey to set.
       * @return This builder for chaining.
       */
      public Builder setEphemeralPubkey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ephemeralPubkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ephemeral public key to use for the DH key derivation.
       * </pre>
       *
       * <code>bytes ephemeral_pubkey = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEphemeralPubkey() {
        
        ephemeralPubkey_ = getDefaultInstance().getEphemeralPubkey();
        onChanged();
        return this;
      }

      private signrpc.SignerOuterClass.KeyLocator keyLoc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder> keyLocBuilder_;
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       * @return Whether the keyLoc field is set.
       */
      public boolean hasKeyLoc() {
        return keyLocBuilder_ != null || keyLoc_ != null;
      }
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       * @return The keyLoc.
       */
      public signrpc.SignerOuterClass.KeyLocator getKeyLoc() {
        if (keyLocBuilder_ == null) {
          return keyLoc_ == null ? signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
        } else {
          return keyLocBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder setKeyLoc(signrpc.SignerOuterClass.KeyLocator value) {
        if (keyLocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyLoc_ = value;
          onChanged();
        } else {
          keyLocBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder setKeyLoc(
          signrpc.SignerOuterClass.KeyLocator.Builder builderForValue) {
        if (keyLocBuilder_ == null) {
          keyLoc_ = builderForValue.build();
          onChanged();
        } else {
          keyLocBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder mergeKeyLoc(signrpc.SignerOuterClass.KeyLocator value) {
        if (keyLocBuilder_ == null) {
          if (keyLoc_ != null) {
            keyLoc_ =
              signrpc.SignerOuterClass.KeyLocator.newBuilder(keyLoc_).mergeFrom(value).buildPartial();
          } else {
            keyLoc_ = value;
          }
          onChanged();
        } else {
          keyLocBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public Builder clearKeyLoc() {
        if (keyLocBuilder_ == null) {
          keyLoc_ = null;
          onChanged();
        } else {
          keyLoc_ = null;
          keyLocBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public signrpc.SignerOuterClass.KeyLocator.Builder getKeyLocBuilder() {
        
        onChanged();
        return getKeyLocFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      public signrpc.SignerOuterClass.KeyLocatorOrBuilder getKeyLocOrBuilder() {
        if (keyLocBuilder_ != null) {
          return keyLocBuilder_.getMessageOrBuilder();
        } else {
          return keyLoc_ == null ?
              signrpc.SignerOuterClass.KeyLocator.getDefaultInstance() : keyLoc_;
        }
      }
      /**
       * <pre>
       *The optional key locator of the local key that should be used. If this
       *parameter is not set then the node's identity private key will be used.
       * </pre>
       *
       * <code>.signrpc.KeyLocator key_loc = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder> 
          getKeyLocFieldBuilder() {
        if (keyLocBuilder_ == null) {
          keyLocBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              signrpc.SignerOuterClass.KeyLocator, signrpc.SignerOuterClass.KeyLocator.Builder, signrpc.SignerOuterClass.KeyLocatorOrBuilder>(
                  getKeyLoc(),
                  getParentForChildren(),
                  isClean());
          keyLoc_ = null;
        }
        return keyLocBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.SharedKeyRequest)
    }

    // @@protoc_insertion_point(class_scope:signrpc.SharedKeyRequest)
    private static final signrpc.SignerOuterClass.SharedKeyRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.SharedKeyRequest();
    }

    public static signrpc.SignerOuterClass.SharedKeyRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SharedKeyRequest>
        PARSER = new com.google.protobuf.AbstractParser<SharedKeyRequest>() {
      @java.lang.Override
      public SharedKeyRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SharedKeyRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SharedKeyRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SharedKeyRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.SharedKeyRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SharedKeyResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:signrpc.SharedKeyResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The shared public key, hashed with sha256.
     * </pre>
     *
     * <code>bytes shared_key = 1;</code>
     * @return The sharedKey.
     */
    com.google.protobuf.ByteString getSharedKey();
  }
  /**
   * Protobuf type {@code signrpc.SharedKeyResponse}
   */
  public static final class SharedKeyResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:signrpc.SharedKeyResponse)
      SharedKeyResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SharedKeyResponse.newBuilder() to construct.
    private SharedKeyResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SharedKeyResponse() {
      sharedKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SharedKeyResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SharedKeyResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              sharedKey_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              signrpc.SignerOuterClass.SharedKeyResponse.class, signrpc.SignerOuterClass.SharedKeyResponse.Builder.class);
    }

    public static final int SHARED_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString sharedKey_;
    /**
     * <pre>
     * The shared public key, hashed with sha256.
     * </pre>
     *
     * <code>bytes shared_key = 1;</code>
     * @return The sharedKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSharedKey() {
      return sharedKey_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!sharedKey_.isEmpty()) {
        output.writeBytes(1, sharedKey_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!sharedKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, sharedKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof signrpc.SignerOuterClass.SharedKeyResponse)) {
        return super.equals(obj);
      }
      signrpc.SignerOuterClass.SharedKeyResponse other = (signrpc.SignerOuterClass.SharedKeyResponse) obj;

      if (!getSharedKey()
          .equals(other.getSharedKey())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SHARED_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getSharedKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static signrpc.SignerOuterClass.SharedKeyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(signrpc.SignerOuterClass.SharedKeyResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code signrpc.SharedKeyResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:signrpc.SharedKeyResponse)
        signrpc.SignerOuterClass.SharedKeyResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                signrpc.SignerOuterClass.SharedKeyResponse.class, signrpc.SignerOuterClass.SharedKeyResponse.Builder.class);
      }

      // Construct using signrpc.SignerOuterClass.SharedKeyResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sharedKey_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return signrpc.SignerOuterClass.internal_static_signrpc_SharedKeyResponse_descriptor;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SharedKeyResponse getDefaultInstanceForType() {
        return signrpc.SignerOuterClass.SharedKeyResponse.getDefaultInstance();
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SharedKeyResponse build() {
        signrpc.SignerOuterClass.SharedKeyResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public signrpc.SignerOuterClass.SharedKeyResponse buildPartial() {
        signrpc.SignerOuterClass.SharedKeyResponse result = new signrpc.SignerOuterClass.SharedKeyResponse(this);
        result.sharedKey_ = sharedKey_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof signrpc.SignerOuterClass.SharedKeyResponse) {
          return mergeFrom((signrpc.SignerOuterClass.SharedKeyResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(signrpc.SignerOuterClass.SharedKeyResponse other) {
        if (other == signrpc.SignerOuterClass.SharedKeyResponse.getDefaultInstance()) return this;
        if (other.getSharedKey() != com.google.protobuf.ByteString.EMPTY) {
          setSharedKey(other.getSharedKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        signrpc.SignerOuterClass.SharedKeyResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (signrpc.SignerOuterClass.SharedKeyResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString sharedKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The shared public key, hashed with sha256.
       * </pre>
       *
       * <code>bytes shared_key = 1;</code>
       * @return The sharedKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSharedKey() {
        return sharedKey_;
      }
      /**
       * <pre>
       * The shared public key, hashed with sha256.
       * </pre>
       *
       * <code>bytes shared_key = 1;</code>
       * @param value The sharedKey to set.
       * @return This builder for chaining.
       */
      public Builder setSharedKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sharedKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shared public key, hashed with sha256.
       * </pre>
       *
       * <code>bytes shared_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSharedKey() {
        
        sharedKey_ = getDefaultInstance().getSharedKey();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:signrpc.SharedKeyResponse)
    }

    // @@protoc_insertion_point(class_scope:signrpc.SharedKeyResponse)
    private static final signrpc.SignerOuterClass.SharedKeyResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new signrpc.SignerOuterClass.SharedKeyResponse();
    }

    public static signrpc.SignerOuterClass.SharedKeyResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SharedKeyResponse>
        PARSER = new com.google.protobuf.AbstractParser<SharedKeyResponse>() {
      @java.lang.Override
      public SharedKeyResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SharedKeyResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SharedKeyResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SharedKeyResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public signrpc.SignerOuterClass.SharedKeyResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_KeyLocator_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_KeyLocator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_KeyDescriptor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_KeyDescriptor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_TxOut_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_TxOut_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_SignDescriptor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_SignDescriptor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_SignReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_SignReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_SignResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_SignResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_InputScript_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_InputScript_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_InputScriptResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_InputScriptResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_SignMessageReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_SignMessageReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_SignMessageResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_SignMessageResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_VerifyMessageReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_VerifyMessageReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_VerifyMessageResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_VerifyMessageResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_SharedKeyRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_SharedKeyRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_signrpc_SharedKeyResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_signrpc_SharedKeyResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024signrpc/signer.proto\022\007signrpc\"3\n\nKeyLo" +
      "cator\022\022\n\nkey_family\030\001 \001(\005\022\021\n\tkey_index\030\002" +
      " \001(\005\"L\n\rKeyDescriptor\022\025\n\rraw_key_bytes\030\001" +
      " \001(\014\022$\n\007key_loc\030\002 \001(\0132\023.signrpc.KeyLocat" +
      "or\")\n\005TxOut\022\r\n\005value\030\001 \001(\003\022\021\n\tpk_script\030" +
      "\002 \001(\014\"\304\001\n\016SignDescriptor\022(\n\010key_desc\030\001 \001" +
      "(\0132\026.signrpc.KeyDescriptor\022\024\n\014single_twe" +
      "ak\030\002 \001(\014\022\024\n\014double_tweak\030\003 \001(\014\022\026\n\016witnes" +
      "s_script\030\004 \001(\014\022\036\n\006output\030\005 \001(\0132\016.signrpc" +
      ".TxOut\022\017\n\007sighash\030\007 \001(\r\022\023\n\013input_index\030\010" +
      " \001(\005\"L\n\007SignReq\022\024\n\014raw_tx_bytes\030\001 \001(\014\022+\n" +
      "\nsign_descs\030\002 \003(\0132\027.signrpc.SignDescript" +
      "or\"\034\n\010SignResp\022\020\n\010raw_sigs\030\001 \003(\014\"2\n\013Inpu" +
      "tScript\022\017\n\007witness\030\001 \003(\014\022\022\n\nsig_script\030\002" +
      " \001(\014\">\n\017InputScriptResp\022+\n\rinput_scripts" +
      "\030\001 \003(\0132\024.signrpc.InputScript\"C\n\016SignMess" +
      "ageReq\022\013\n\003msg\030\001 \001(\014\022$\n\007key_loc\030\002 \001(\0132\023.s" +
      "ignrpc.KeyLocator\"$\n\017SignMessageResp\022\021\n\t" +
      "signature\030\001 \001(\014\"B\n\020VerifyMessageReq\022\013\n\003m" +
      "sg\030\001 \001(\014\022\021\n\tsignature\030\002 \001(\014\022\016\n\006pubkey\030\003 " +
      "\001(\014\"\"\n\021VerifyMessageResp\022\r\n\005valid\030\001 \001(\010\"" +
      "R\n\020SharedKeyRequest\022\030\n\020ephemeral_pubkey\030" +
      "\001 \001(\014\022$\n\007key_loc\030\002 \001(\0132\023.signrpc.KeyLoca" +
      "tor\"\'\n\021SharedKeyResponse\022\022\n\nshared_key\030\001" +
      " \001(\0142\324\002\n\006Signer\0224\n\rSignOutputRaw\022\020.signr" +
      "pc.SignReq\032\021.signrpc.SignResp\022@\n\022Compute" +
      "InputScript\022\020.signrpc.SignReq\032\030.signrpc." +
      "InputScriptResp\022@\n\013SignMessage\022\027.signrpc" +
      ".SignMessageReq\032\030.signrpc.SignMessageRes" +
      "p\022F\n\rVerifyMessage\022\031.signrpc.VerifyMessa" +
      "geReq\032\032.signrpc.VerifyMessageResp\022H\n\017Der" +
      "iveSharedKey\022\031.signrpc.SharedKeyRequest\032" +
      "\032.signrpc.SharedKeyResponseB/Z-github.co" +
      "m/lightningnetwork/lnd/lnrpc/signrpcb\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_signrpc_KeyLocator_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_signrpc_KeyLocator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_KeyLocator_descriptor,
        new java.lang.String[] { "KeyFamily", "KeyIndex", });
    internal_static_signrpc_KeyDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_signrpc_KeyDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_KeyDescriptor_descriptor,
        new java.lang.String[] { "RawKeyBytes", "KeyLoc", });
    internal_static_signrpc_TxOut_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_signrpc_TxOut_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_TxOut_descriptor,
        new java.lang.String[] { "Value", "PkScript", });
    internal_static_signrpc_SignDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_signrpc_SignDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_SignDescriptor_descriptor,
        new java.lang.String[] { "KeyDesc", "SingleTweak", "DoubleTweak", "WitnessScript", "Output", "Sighash", "InputIndex", });
    internal_static_signrpc_SignReq_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_signrpc_SignReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_SignReq_descriptor,
        new java.lang.String[] { "RawTxBytes", "SignDescs", });
    internal_static_signrpc_SignResp_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_signrpc_SignResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_SignResp_descriptor,
        new java.lang.String[] { "RawSigs", });
    internal_static_signrpc_InputScript_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_signrpc_InputScript_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_InputScript_descriptor,
        new java.lang.String[] { "Witness", "SigScript", });
    internal_static_signrpc_InputScriptResp_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_signrpc_InputScriptResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_InputScriptResp_descriptor,
        new java.lang.String[] { "InputScripts", });
    internal_static_signrpc_SignMessageReq_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_signrpc_SignMessageReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_SignMessageReq_descriptor,
        new java.lang.String[] { "Msg", "KeyLoc", });
    internal_static_signrpc_SignMessageResp_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_signrpc_SignMessageResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_SignMessageResp_descriptor,
        new java.lang.String[] { "Signature", });
    internal_static_signrpc_VerifyMessageReq_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_signrpc_VerifyMessageReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_VerifyMessageReq_descriptor,
        new java.lang.String[] { "Msg", "Signature", "Pubkey", });
    internal_static_signrpc_VerifyMessageResp_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_signrpc_VerifyMessageResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_VerifyMessageResp_descriptor,
        new java.lang.String[] { "Valid", });
    internal_static_signrpc_SharedKeyRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_signrpc_SharedKeyRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_SharedKeyRequest_descriptor,
        new java.lang.String[] { "EphemeralPubkey", "KeyLoc", });
    internal_static_signrpc_SharedKeyResponse_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_signrpc_SharedKeyResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_signrpc_SharedKeyResponse_descriptor,
        new java.lang.String[] { "SharedKey", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
